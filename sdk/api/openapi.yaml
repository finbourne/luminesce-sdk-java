openapi: 3.0.1
info:
  contact:
    email: info@finbourne.com
    name: FINBOURNE Technology
    url: https://www.finbourne.com
  termsOfService: https://www.finbourne.com/legal/terms-conditions
  title: FINBOURNE Luminesce Web API
  version: 1.14.358
  x-logo:
    url: https://www.lusid.com/app/assets/logo_white.png
    backgroundColor: '#415464'
servers:
- url: https://fbn-prd.lusid.com/honeycomb
security:
- {}
tags:
- description: Metadata about the application
  name: Application Metadata
- description: "List, Mint, Renew and Revoke your Honeycomb / Luminesce TLS Certificates."
  name: Certificate Management
- description: Shows Table and Field level information on Providers that are currently
    running that you have access to.
  name: Current Table/Field Catalog
- description: Shows queries executed at some point and details about them
  name: Historically Executed Queries
- description: This executes a series of internally defined LuminesceSql statements
    in the background
  name: Multi-Query Execution
- description: This executes LuminesceSql and allows monitoring its completion
  name: Sql Background Execution
- description: "This executes LuminesceSql synchronously, allows for returning the\
    \ resulting data in various formats and for pretty-printing of sql."
  name: Sql Execution
paths:
  /api/Catalog:
    get:
      description: "\nThe following LuminesceSql is executed to return this information:\n\
        \n```sql\n@reg =\nselect\n Name,\n min(Description) as Description,\n min(DocumentationLink)\
        \ as DocumentationLink,\n iif(Category = 'View' and Client is not null, true,\
        \ false) as IsView\nfrom\n Sys.Registration\nwhere\n Type in ('DirectProvider',\
        \ 'DataProvider')\n and \n ShowAll = false\ngroup by\n 1\n ;\n\n@fld =\nselect\n\
        \ TableName,\n FieldName,\n DataType,\n FieldType,\n IsPrimaryKey,\n IsMain,\n\
        \ Description,\n ParamDefaultValue,\n TableParamColumns\nfrom\n Sys.Field\n\
        \ ;\n\n@x =\nselect\n coalesce(f.TableName, r.Name) as TableName,\n coalesce(f.FieldName,\
        \ 'N/A') as FieldName,\n f.DataType,\n f.FieldType,\n f.IsPrimaryKey,\n f.IsMain,\n\
        \ case \n when f.TableName is not null then\n f.Description\n else\n r.Name\
        \ || ' returns a different set of columns depending on use.'\n end as Description,\n\
        \ f.ParamDefaultValue,\n f.TableParamColumns,\n r.Description as ProviderDescription,\n\
        \ r.DocumentationLink,\n r.IsView\nfrom\n @reg r\n left outer join @fld f\n\
        \ on r.Name = f.TableName\norder by\n 1, 5 desc, 6 desc, 2\n ;\n \n```\n\n\
        The following error codes are to be anticipated with standard Problem Detail\
        \ reports:\n- 401 Unauthorized\n"
      operationId: GetCatalog
      parameters:
      - description: Limit the catalog to only things in some way dealing with the
          passed in text string
        explode: true
        in: query
        name: freeTextSearch
        required: false
        schema:
          type: string
        style: form
      - description: Should this be text/json (not json-encoded-as-a-string)
        explode: true
        in: query
        name: jsonProper
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
      security:
      - oauth2: []
      summary: "GetCatalog: Shows Table and Field level information on Providers that\
        \ are currently running that you have access to (in Json format)"
      tags:
      - Current Table/Field Catalog
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/Certificate/certificate:
    get:
      description: |2

        Downloads your latest Domain or User certificate's public or private key - if any.

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 400 BadRequest - certificate is not available for some reason
        - 401 Unauthorized
      operationId: DownloadCertificate
      parameters:
      - description: User or Domain level cert (Domain level requires additional entitlements)
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/CertificateType'
        style: form
        x-nullable: true
      - description: Should the public key or private key be downloaded? (both must
          be in place to run providers)
        explode: true
        in: query
        name: fileType
        required: false
        schema:
          $ref: '#/components/schemas/CertificateFileType'
        style: form
        x-nullable: true
      - description: "If no matching cert is available, should an attempt be made\
          \ to Create/Renew it with default options?"
        explode: true
        in: query
        name: mayAutoCreate
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] DownloadCertificate: Downloads your latest Domain or\
        \ User certificate's public or private key - if any."
      tags:
      - Certificate Management
      x-fbn-apistatus: Experimental
      x-accepts: application/json
  /api/Certificate/certificates:
    get:
      description: |2

        Lists all the certificates previously minted to which you have access.

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 401 Unauthorized
      operationId: ListCertificates
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CertificateState'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CertificateState'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CertificateState'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] ListCertificates: Shows Table and Field level information\
        \ on Providers that are currently running that you have access to (in Json\
        \ format)"
      tags:
      - Certificate Management
      x-fbn-apistatus: Experimental
      x-accepts: application/json
  /api/Certificate/manage:
    put:
      description: |2

        Manages a certificate. This could be creating a new one, renewing an old one or revoking one explicitly.

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 400 BadRequest - something about the request cannot be processed
        - 401 Unauthorized
      operationId: ManageCertificate
      parameters:
      - description: "The Action to perform, e.g. Create / Renew / Revoke"
        explode: true
        in: query
        name: action
        required: false
        schema:
          $ref: '#/components/schemas/CertificateAction'
        style: form
        x-nullable: true
      - description: User or Domain level cert (Domain level requires additional entitlements)
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/CertificateType'
        style: form
        x-nullable: true
      - description: "Version number of the cert, the request will fail to validate\
          \ if incorrect"
        explode: true
        in: query
        name: version
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: When should the cert first be valid (defaults to the current
          time in UTC)
        explode: true
        in: query
        name: validityStart
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: When should the cert no longer be valid (defaults to 13 months
          from now)
        explode: true
        in: query
        name: validityEnd
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: "True will just validate the request, but perform no changes\
          \ to any system"
        explode: true
        in: query
        name: dryRun
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CertificateState'
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateState'
            text/json:
              schema:
                $ref: '#/components/schemas/CertificateState'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] ManageCertificate: Manages a new certificate (Create\
        \ / Renew / Revoke)"
      tags:
      - Certificate Management
      x-fbn-apistatus: Experimental
      x-accepts: application/json
  /api/History:
    get:
      description: |2

        Starts to load the historical query logs for a certain time range, search criteria, etc.

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 401 Unauthorized
      operationId: GetHistory
      parameters:
      - description: Date time to start the search from. Will default to Now - 1 Day
        explode: true
        in: query
        name: startAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: Date time to end the search at. Defaults to now.
        explode: true
        in: query
        name: endAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: Some test that must be in at least one field returned.
        explode: true
        in: query
        name: freeTextSearch
        required: false
        schema:
          type: string
        style: form
      - description: "For users with extra permissions, they may optionally see other\
          \ users' queries."
        explode: true
        in: query
        name: showAll
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      responses:
        "202":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BackgroundQueryResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundQueryResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BackgroundQueryResponse'
          description: Accepted
      security:
      - oauth2: []
      summary: "GetHistory: Shows queries executed in a given historical time window\
        \ (in Json format)."
      tags:
      - Historically Executed Queries
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/History/{executionId}:
    delete:
      description: |
        Cancel the query (if still running) / clear the data (if already returned)
        The following error codes are to be anticipated with standard Problem Detail reports:
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't exist and is not running.
      operationId: CancelHistory
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BackgroundQueryCancelResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundQueryCancelResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BackgroundQueryCancelResponse'
          description: Success
      security:
      - oauth2: []
      summary: "CancelHistory: Cancels (if running) or clears the data from (if completed)\
        \ a previously started History query"
      tags:
      - Historically Executed Queries
      x-fbn-apistatus: Stable
      x-accepts: application/json
    get:
      description: |-
        View progress information (up until this point) of previously started History query
        The following error codes are to be anticipated with standard Problem Detail reports:
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't exist and is not running.
        - 429 Too Many Requests : Please try your request again soon
         1. The query has been executed successfully in the past yet the server-instance receiving this request (e.g. from a load balancer) doesn't yet have this data available.
         1. By virtue of the request you have just placed this will have started to load from the persisted cache and will soon be available.
         1. It is also the case that the original server-instance to process the original query is likely to already be able to service this request.
      operationId: GetProgressOfHistory
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BackgroundQueryProgressResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundQueryProgressResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BackgroundQueryProgressResponse'
          description: Success
      security:
      - oauth2: []
      summary: "GetProgressOfHistory: View progress information (up until this point)\
        \ of a history query"
      tags:
      - Historically Executed Queries
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/History/{executionId}/histogram:
    get:
      description: |-
        Fetch the histogram in Json format (if available, or if not simply being informed it is not yet ready)
        The following error codes are to be anticipated with standard Problem Detail reports:
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't (yet) exist.
        - 429 Too Many Requests : Please try your request again soon
         1. The query has been executed successfully in the past yet the server-instance receiving this request (e.g. from a load balancer) doesn't yet have this data available.
         1. By virtue of the request you have just placed this will have started to load from the persisted cache and will soon be available.
         1. It is also the case that the original server-instance to process the original query is likely to already be able to service this request.
      operationId: FetchHistoryResultHistogram
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: Optional histogram bucket width. If not provided a set number
          of buckets between start/end range will be generated.
        explode: true
        in: query
        name: bucketSize
        required: false
        schema:
          format: date-span
          type: string
        style: form
      - description: An ODATA filter per Finbourne.Filtering syntax.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: Should this be text/json (not json-encoded-as-a-string)
        explode: true
        in: query
        name: jsonProper
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "FetchHistoryResultHistogram: Fetches the result from a previously\
        \ started query, converts it to a histogram (counts in buckets)."
      tags:
      - Historically Executed Queries
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/History/{executionId}/json:
    get:
      description: |-
        Fetch the data in Json format (if available, or if not simply being informed it is not yet ready)
        The following error codes are to be anticipated with standard Problem Detail reports:
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't (yet) exist.
        - 429 Too Many Requests : Please try your request again soon
         1. The query has been executed successfully in the past yet the server-instance receiving this request (e.g. from a load balancer) doesn't yet have this data available.
         1. By virtue of the request you have just placed this will have started to load from the persisted cache and will soon be available.
         1. It is also the case that the original server-instance to process the original query is likely to already be able to service this request.
      operationId: FetchHistoryResultJson
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: "Order the results by these fields.\r\n Use the `-` sign to denote\
          \ descending order, e.g. `-MyFieldName`. Numeric indexes may be used also,\
          \ e.g. `2,-3`.\r\n Multiple fields can be denoted by a comma e.g. `-MyFieldName,AnotherFieldName,-AFurtherFieldName`.\r\
          \n Default is null, the sort order specified in the query itself."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          maxLength: 16384
          minLength: 1
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: An ODATA filter per Finbourne.Filtering syntax.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: "Default is null (meaning return all columns in the original\
          \ query itself).\r\nThe values are in terms of the result column name from\
          \ the original data set and are comma delimited.\r\nThe power of this comes\
          \ in that you may aggregate the data if you wish\r\n(that is the main reason\
          \ for allowing this, in fact).\r\ne.g.:\r\n- `MyField`\r\n- `Max(x) FILTER\
          \ (WHERE y > 12) as ABC` (max of a field, if another field lets it qualify,\
          \ with a nice column name)\r\n- `count(*)` (count the rows for the given\
          \ group, that would produce a rather ugly column name, but it works)\r\n\
          - `count(distinct x) as numOfXs`\r\nIf there was an illegal character in\
          \ a field you are selecting from, you are responsible for bracketing it\
          \ with [ ]. \r\ne.g.\r\n- `some_field, count(*) as a, max(x) as b, min([column\
          \ with space in name]) as nice_name`\r\n where you would likely want to\
          \ pass `1` as the `groupBy` also."
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: "Groups by the specified fields.\r\n A comma delimited list of:\
          \ 1 based numeric indexes (cleaner), or repeats of the select expressions\
          \ (a bit verbose and must match exactly).\r\n e.g. `2,3`, `myColumn`.\r\n\
          \ Default is null (meaning no grouping will be performed on the selected\
          \ columns).\r\n This applies only over the result set being requested here,\
          \ meaning indexes into the \"select\" parameter fields.\r\n Only specify\
          \ this if you are selecting aggregations in the \"select\" parameter."
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      - description: "When paginating, only return this number of records, page should\
          \ also be specified."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "0-N based on chunk sized determined by the limit, ignored if\
          \ limit < 1."
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: Should this be text/json (not json-encoded-as-a-string)
        explode: true
        in: query
        name: jsonProper
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "FetchHistoryResultJson: Fetches the result from a previously started\
        \ query, in JSON format."
      tags:
      - Historically Executed Queries
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/metadata/access/resources:
    get:
      description: "\nGet the comprehensive set of resources that are available for\
        \ access control.\n\nThe following LuminesceSql is executed to return this\
        \ information, \nwhich is then packaged up as AccessControlledResource:\n\n\
        ```sql\nselect\n Name,\n min(coalesce(Description, Name) || ' (' || Type ||\
        \ ')') as Description\nfrom\n Sys.Registration\nwhere\n Type in ('DirectProvider',\
        \ 'DataProvider')\n and\n ShowAll = true\ngroup by 1\norder by 1\n \n```\n\
        \nThe following error codes are to be anticipated with standard Problem Detail\
        \ reports:\n- 401 Unauthorized\n"
      operationId: GetServicesAsAccessControlledResources
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ResourceListOfAccessControlledResource'
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListOfAccessControlledResource'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceListOfAccessControlledResource'
          description: Success
      security:
      - oauth2: []
      summary: "GetServicesAsAccessControlledResources: Get resources available for\
        \ access control"
      tags:
      - Application Metadata
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/MultiQueryBackground:
    put:
      description: "\nAllow for starting a potentially long running query and getting\
        \ back an immediate response with how to \n- fetch the data in various formats\
        \ (if available, or if not simply being informed it is not yet ready), on\
        \ a per result basis\n- view progress information (up until this point), for\
        \ all results in one go\n- cancel the queries (if still running) / clear the\
        \ data (if already returned)\n\nThe following error codes are to be anticipated\
        \ with standard Problem Detail reports:\n- 400 BadRequest - there was something\
        \ wrong with your query syntax (the issue was detected at parse-time)\n- 401\
        \ Unauthorized\n"
      operationId: StartQueries
      parameters:
      - description: An enum value defining the set of statements being executed
        example: Instrument
        explode: true
        in: query
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/MultiQueryDefinitionType'
        style: form
      - description: The AsAt time used by any bitemporal provider in the queries.
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: The EffectiveAt time used by any bitemporal provider in the queries.
        explode: true
        in: query
        name: effectiveAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: A limit that is applied to first-level queries (e.g. Instruments
          themselves)
        explode: true
        in: query
        name: limit1
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: A limit that is applied to second-level queries (e.g. Holdings
          based on the set of Instruments found)
        explode: true
        in: query
        name: limit2
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "A value available to queries, these vary by 'type' and are only\
          \ used by some types at all.\r\ne.g. a start-date of some sort"
        explode: true
        in: query
        name: input1
        required: false
        schema:
          type: string
        style: form
      - description: "A second value available to queries, these vary by 'type' and\
          \ are only used by some types at all."
        explode: true
        in: query
        name: input2
        required: false
        schema:
          type: string
        style: form
      - description: "A third value available to queries, these vary by 'type' and\
          \ are only used by some types at all."
        explode: true
        in: query
        name: input3
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum time the query may run for, in seconds: <0 → ∞, 0 →\
          \ 1200s (20m)"
        example: 1200
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "Maximum time the result may be kept for, in seconds: <0 → 1200\
          \ (20m), 0 → 28800 (8h), max = 2,678,400 (31d)"
        example: 7200
        explode: true
        in: query
        name: keepForSeconds
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      requestBody:
        content:
          text/plain:
            example: Apple
            schema:
              type: string
        description: "A \"search\" value (e.g. 'Apple' on an instrument search, a\
          \ `Finbourne.Filtering` expression of Insights, etc.)\r\nIn the cases where\
          \ \"Nothing\" is valid for a `Finbourne.Filtering` expression, pass `True`."
        required: true
      responses:
        "202":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BackgroundMultiQueryResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundMultiQueryResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BackgroundMultiQueryResponse'
          description: Accepted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "StartQueries: Starts to Execute the LuminesceSql statements in the\
        \ background."
      tags:
      - Multi-Query Execution
      x-fbn-apistatus: Stable
      x-content-type: text/plain
      x-accepts: application/json
  /api/MultiQueryBackground/{executionId}:
    delete:
      description: |
        Cancel the query-set (if still running) / clear the data (if already returned)
        The following error codes are to be anticipated with standard Problem Detail reports:
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't exist and is not running.
      operationId: CancelMultiQuery
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BackgroundQueryCancelResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundQueryCancelResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BackgroundQueryCancelResponse'
          description: Success
      security:
      - oauth2: []
      summary: "CancelMultiQuery: Cancels (if running) or clears the data from (if\
        \ completed) a previously started query-set"
      tags:
      - Multi-Query Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
    get:
      description: |-
        View progress information (up until this point) for the entire query-set
        The following error codes are to be anticipated with standard Problem Detail reports:
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't exist and is not running.
        - 429 Too Many Requests : Please try your request again soon
         1. The query has been executed successfully in the past yet the server-instance receiving this request (e.g. from a load balancer) doesn't yet have this data available.
         1. By virtue of the request you have just placed this will have started to load from the persisted cache and will soon be available.
         1. It is also the case that the original server-instance to process the original query is likely to already be able to service this request.
      operationId: GetProgressOfMultiQuery
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BackgroundMultiQueryProgressResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundMultiQueryProgressResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BackgroundMultiQueryProgressResponse'
          description: Success
      security:
      - oauth2: []
      summary: "GetProgressOfMultiQuery: View progress information (up until this\
        \ point) for the entire query-set"
      tags:
      - Multi-Query Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/Sql/csv:
    put:
      description: |2

        For more complex LuminesceSql a PUT will allow for longer Sql.
        e.g.:
        ```sql
        @@cutoff = select #2020-02-01#;
        @issues = select Id, SortId, Summary, Created, Updated from Dev.Jira.Issue where Project='HC' and Created < @@cutoff and Updated > @@cutoff;

        select i.Id, i.SortId, i.Summary, LinkText, LinkedIssueId, LinkedIssueSortId, LinkedIssueSummary
        from @issues i
        inner join Dev.Jira.Issue.Link li
         on i.Id = li.IssueId
        ```

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 400 BadRequest - something failed with the execution or parsing of your query
        - 401 Unauthorized
      operationId: PutByQueryCsv
      parameters:
      - description: Name to apply to the query in logs and `Sys.Logs.HcQueryStart`
        example: Get tables/fields
        explode: true
        in: query
        name: queryName
        required: false
        schema:
          type: string
        style: form
      - description: Makes this a file-download request (as opposed to returning the
          data in the response-body)
        explode: true
        in: query
        name: download
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      - description: "In seconds: <0 → ∞, 0 → 120s"
        example: 120
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: Delimiter string to override the default
        explode: true
        in: query
        name: delimiter
        required: false
        schema:
          type: string
        style: form
      - description: Escape character to override the default
        explode: true
        in: query
        name: escape
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          text/plain:
            example: select generate justfile test_sdk from sys.field
            schema:
              type: string
        description: LuminesceSql to Execute (may be multi-line)
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "PutByQueryCsv: Executes Sql, returned in CSV format, where the sql\
        \ is the post-body url."
      tags:
      - Sql Execution
      x-fbn-apistatus: Stable
      x-content-type: text/plain
      x-accepts: application/json
  /api/Sql/csv/{query}:
    get:
      description: |2

        For simple single-line query execution via the url.
        e.g. `select ^ from Sys.Field order by 1, 2`

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 400 BadRequest - something failed with the execution or parsing of your query
        - 401 Unauthorized
      operationId: GetByQueryCsv
      parameters:
      - description: LuminesceSql to Execute (must be one line only)
        example: "select ^ from Sys.Field order by 1, 2"
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: Name to apply to the query in logs and `Sys.Logs.HcQueryStart`
        example: Get tables/fields
        explode: true
        in: query
        name: queryName
        required: false
        schema:
          type: string
        style: form
      - description: Makes this a file-download request (as opposed to returning the
          data in the response-body)
        explode: true
        in: query
        name: download
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      - description: "In seconds: <0 → ∞, 0 → 120s"
        example: 120
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: Delimiter string to override the default
        explode: true
        in: query
        name: delimiter
        required: false
        schema:
          type: string
        style: form
      - description: Escape character to override the default
        explode: true
        in: query
        name: escape
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "GetByQueryCsv: Executes Sql, returned in CSV format, where the sql\
        \ is simply in the url."
      tags:
      - Sql Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/Sql/excel:
    put:
      description: |2

        For more complex LuminesceSql a PUT will allow for longer Sql.
        e.g.:
        ```sql
        @@cutoff = select #2020-02-01#;
        @issues = select Id, SortId, Summary, Created, Updated from Dev.Jira.Issue where Project='HC' and Created < @@cutoff and Updated > @@cutoff;

        select i.Id, i.SortId, i.Summary, LinkText, LinkedIssueId, LinkedIssueSortId, LinkedIssueSummary
        from @issues i
        inner join Dev.Jira.Issue.Link li
         on i.Id = li.IssueId
        ```

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 400 BadRequest - something failed with the execution or parsing of your query
        - 401 Unauthorized
      operationId: PutByQueryExcel
      parameters:
      - description: Name to apply to the query in logs and `Sys.Logs.HcQueryStart`
        example: Get tables/fields
        explode: true
        in: query
        name: queryName
        required: false
        schema:
          type: string
        style: form
      - description: "In seconds: <0 → ∞, 0 → 120s"
        example: 120
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      requestBody:
        content:
          text/plain:
            example: select generate justfile test_sdk from sys.field
            schema:
              type: string
        description: LuminesceSql to Execute (may be multi-line)
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "PutByQueryExcel: Executes Sql, returned in Excel (xlsx) format (as\
        \ a file to be downloaded), where the sql is the post-body url."
      tags:
      - Sql Execution
      x-fbn-apistatus: Stable
      x-content-type: text/plain
      x-accepts: application/json
  /api/Sql/excel/{query}:
    get:
      description: |2

        For simple single-line query execution via the url.
        e.g. `select ^ from Sys.Field order by 1, 2`

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 400 BadRequest - something failed with the execution or parsing of your query
        - 401 Unauthorized
      operationId: GetByQueryExcel
      parameters:
      - description: LuminesceSql to Execute (must be one line only)
        example: "select ^ from Sys.Field order by 1, 2"
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: Name to apply to the query in logs and `Sys.Logs.HcQueryStart`
        example: Get tables/fields
        explode: true
        in: query
        name: queryName
        required: false
        schema:
          type: string
        style: form
      - description: "In seconds: <0 → ∞, 0 → 120s"
        example: 120
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "GetByQueryExcel: Executes Sql, returned in Excel (xlsx) format (as\
        \ a file to be downloaded) format, where the sql is simply in the url."
      tags:
      - Sql Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/Sql/fromdesign:
    put:
      description: SQL Designer specification to generate SQL from
      operationId: PutQueryDesignToSql
      requestBody:
        content:
          application/json-patch+json:
            example:
              tableName: Sys.Field
              fields:
              - name: TableName
                dataType: Text
                shouldSelect: true
                filters:
                - operator: Eq
                  value: Sys.Registration
                aggregations: []
              - name: FieldName
                dataType: Text
                shouldSelect: true
                filters: []
                aggregations:
                - type: count_distinct
                  alias: NumberOfFields
              orderBy:
              - field: DataType
                direction: asc
              limit: 42
              warnings: []
              availableFields: []
            schema:
              $ref: '#/components/schemas/QueryDesign'
          application/json:
            example:
              tableName: Sys.Field
              fields:
              - name: TableName
                dataType: Text
                shouldSelect: true
                filters:
                - operator: Eq
                  value: Sys.Registration
                aggregations: []
              - name: FieldName
                dataType: Text
                shouldSelect: true
                filters: []
                aggregations:
                - type: count_distinct
                  alias: NumberOfFields
              orderBy:
              - field: DataType
                direction: asc
              limit: 42
              warnings: []
              availableFields: []
            schema:
              $ref: '#/components/schemas/QueryDesign'
          text/json:
            example:
              tableName: Sys.Field
              fields:
              - name: TableName
                dataType: Text
                shouldSelect: true
                filters:
                - operator: Eq
                  value: Sys.Registration
                aggregations: []
              - name: FieldName
                dataType: Text
                shouldSelect: true
                filters: []
                aggregations:
                - type: count_distinct
                  alias: NumberOfFields
              orderBy:
              - field: DataType
                direction: asc
              limit: 42
              warnings: []
              availableFields: []
            schema:
              $ref: '#/components/schemas/QueryDesign'
          application/*+json:
            example:
              tableName: Sys.Field
              fields:
              - name: TableName
                dataType: Text
                shouldSelect: true
                filters:
                - operator: Eq
                  value: Sys.Registration
                aggregations: []
              - name: FieldName
                dataType: Text
                shouldSelect: true
                filters: []
                aggregations:
                - type: count_distinct
                  alias: NumberOfFields
              orderBy:
              - field: DataType
                direction: asc
              limit: 42
              warnings: []
              availableFields: []
            schema:
              $ref: '#/components/schemas/QueryDesign'
        description: Structured Query design object to generate SQL from
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] PutQueryDesignToSql: Generates SQL from a structured\
        \ query design"
      tags:
      - Sql Execution
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/Sql/fromfilereaddesign:
    put:
      description: SQL Designer specification to generate SQL from
      operationId: PutFileReadDesignToSql
      parameters:
      - description: Should the generated query be executed to build preview data
          or determine errors.>
        explode: true
        in: query
        name: executeQuery
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-nullable: true
      requestBody:
        content:
          application/json-patch+json:
            example:
              limit: 0
              source:
                location: Drive
                type: Csv
              filePath: /some/folder
              folderFilter: .*\.csv
              addFileName: true
            schema:
              $ref: '#/components/schemas/FileReaderBuilderDef'
          application/json:
            example:
              limit: 0
              source:
                location: Drive
                type: Csv
              filePath: /some/folder
              folderFilter: .*\.csv
              addFileName: true
            schema:
              $ref: '#/components/schemas/FileReaderBuilderDef'
          text/json:
            example:
              limit: 0
              source:
                location: Drive
                type: Csv
              filePath: /some/folder
              folderFilter: .*\.csv
              addFileName: true
            schema:
              $ref: '#/components/schemas/FileReaderBuilderDef'
          application/*+json:
            example:
              limit: 0
              source:
                location: Drive
                type: Csv
              filePath: /some/folder
              folderFilter: .*\.csv
              addFileName: true
            schema:
              $ref: '#/components/schemas/FileReaderBuilderDef'
        description: Structured file read design object to generate SQL from
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] PutFileReadDesignToSql: Generates file read SQL from\
        \ a structured query design"
      tags:
      - Sql Execution
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/Sql/fromviewdesign:
    put:
      description: Converts a ConvertToView specification into SQL that creates a
        view
      operationId: PutViewDesignToSql
      requestBody:
        content:
          application/json-patch+json:
            example:
              query: select generate justfile test_sdk from Lusid.Instrument.bond
              name: Views.MyView
              description: This is a tooltip for the view as a whole
              documentationLink: https://mydocumentationlink.com
              viewParameters:
              - name: MyTextParam
                dataType: Text
                value: Portfolio
                isTableDataMandatory: false
                description: This is a parameter tooltip
              - name: EffectiveAt
                dataType: Date
                value: 2023-05-03
                isTableDataMandatory: false
                description: This is a parameter tooltip
              - name: IsActive
                dataType: Boolean
                value: "true"
                isTableDataMandatory: true
                description: This is a parameter tooltip
              - name: EndUserTable
                dataType: Table
                value: '@end_user_table'
                isTableDataMandatory: true
                description: This is a parameter tooltip
              otherParameters: {}
            schema:
              $ref: '#/components/schemas/ConvertToViewData'
          application/json:
            example:
              query: select generate justfile test_sdk from Lusid.Instrument.bond
              name: Views.MyView
              description: This is a tooltip for the view as a whole
              documentationLink: https://mydocumentationlink.com
              viewParameters:
              - name: MyTextParam
                dataType: Text
                value: Portfolio
                isTableDataMandatory: false
                description: This is a parameter tooltip
              - name: EffectiveAt
                dataType: Date
                value: 2023-05-03
                isTableDataMandatory: false
                description: This is a parameter tooltip
              - name: IsActive
                dataType: Boolean
                value: "true"
                isTableDataMandatory: true
                description: This is a parameter tooltip
              - name: EndUserTable
                dataType: Table
                value: '@end_user_table'
                isTableDataMandatory: true
                description: This is a parameter tooltip
              otherParameters: {}
            schema:
              $ref: '#/components/schemas/ConvertToViewData'
          text/json:
            example:
              query: select generate justfile test_sdk from Lusid.Instrument.bond
              name: Views.MyView
              description: This is a tooltip for the view as a whole
              documentationLink: https://mydocumentationlink.com
              viewParameters:
              - name: MyTextParam
                dataType: Text
                value: Portfolio
                isTableDataMandatory: false
                description: This is a parameter tooltip
              - name: EffectiveAt
                dataType: Date
                value: 2023-05-03
                isTableDataMandatory: false
                description: This is a parameter tooltip
              - name: IsActive
                dataType: Boolean
                value: "true"
                isTableDataMandatory: true
                description: This is a parameter tooltip
              - name: EndUserTable
                dataType: Table
                value: '@end_user_table'
                isTableDataMandatory: true
                description: This is a parameter tooltip
              otherParameters: {}
            schema:
              $ref: '#/components/schemas/ConvertToViewData'
          application/*+json:
            example:
              query: select generate justfile test_sdk from Lusid.Instrument.bond
              name: Views.MyView
              description: This is a tooltip for the view as a whole
              documentationLink: https://mydocumentationlink.com
              viewParameters:
              - name: MyTextParam
                dataType: Text
                value: Portfolio
                isTableDataMandatory: false
                description: This is a parameter tooltip
              - name: EffectiveAt
                dataType: Date
                value: 2023-05-03
                isTableDataMandatory: false
                description: This is a parameter tooltip
              - name: IsActive
                dataType: Boolean
                value: "true"
                isTableDataMandatory: true
                description: This is a parameter tooltip
              - name: EndUserTable
                dataType: Table
                value: '@end_user_table'
                isTableDataMandatory: true
                description: This is a parameter tooltip
              otherParameters: {}
            schema:
              $ref: '#/components/schemas/ConvertToViewData'
        description: Structured Query design object to generate SQL from
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] PutViewDesignToSql: Generates view creation sql from\
        \ a structured view creation design"
      tags:
      - Sql Execution
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/Sql/json:
    put:
      description: |2

        For more complex LuminesceSql a PUT will allow for longer Sql.
        e.g.:
        ```sql
        @@cutoff = select #2020-02-01#;
        @issues = select Id, SortId, Summary, Created, Updated from Dev.Jira.Issue where Project='HC' and Created < @@cutoff and Updated > @@cutoff;

        select i.Id, i.SortId, i.Summary, LinkText, LinkedIssueId, LinkedIssueSortId, LinkedIssueSummary
        from @issues i
        inner join Dev.Jira.Issue.Link li
         on i.Id = li.IssueId
        ```

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 400 BadRequest - something failed with the execution or parsing of your query
        - 401 Unauthorized
      operationId: PutByQueryJson
      parameters:
      - description: Name to apply to the query in logs and `Sys.Logs.HcQueryStart`
        example: Get tables/fields
        explode: true
        in: query
        name: queryName
        required: false
        schema:
          type: string
        style: form
      - description: "In seconds: <0 → ∞, 0 → 120s"
        example: 120
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: Should this be text/json (not json-encoded-as-a-string)
        explode: true
        in: query
        name: jsonProper
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      requestBody:
        content:
          text/plain:
            example: select generate justfile test_sdk from sys.field
            schema:
              type: string
        description: LuminesceSql to Execute (may be multi-line)
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "PutByQueryJson: Executes Sql, returned in JSON format, where the sql\
        \ is the post-body url."
      tags:
      - Sql Execution
      x-fbn-apistatus: Stable
      x-content-type: text/plain
      x-accepts: application/json
  /api/Sql/json/{query}:
    get:
      description: |2

        For simple single-line query execution via the url.
        e.g. `select ^ from Sys.Field order by 1, 2`

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 400 BadRequest - something failed with the execution or parsing of your query
        - 401 Unauthorized
      operationId: GetByQueryJson
      parameters:
      - description: LuminesceSql to Execute (must be one line only)
        example: "select ^ from Sys.Field order by 1, 2"
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: Name to apply to the query in logs and `Sys.Logs.HcQueryStart`
        example: Get tables/fields
        explode: true
        in: query
        name: queryName
        required: false
        schema:
          type: string
        style: form
      - description: "In seconds: <0 → ∞, 0 → 120s"
        example: 120
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: Should this be text/json (not json-encoded-as-a-string)
        explode: true
        in: query
        name: jsonProper
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "GetByQueryJson: Executes Sql, returned in JSON format, where the sql\
        \ is simply in the url."
      tags:
      - Sql Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/Sql/parquet:
    put:
      description: |2

        For more complex LuminesceSql a PUT will allow for longer Sql.
        e.g.:
        ```sql
        @@cutoff = select #2020-02-01#;
        @issues = select Id, SortId, Summary, Created, Updated from Dev.Jira.Issue where Project='HC' and Created < @@cutoff and Updated > @@cutoff;

        select i.Id, i.SortId, i.Summary, LinkText, LinkedIssueId, LinkedIssueSortId, LinkedIssueSummary
        from @issues i
        inner join Dev.Jira.Issue.Link li
         on i.Id = li.IssueId
        ```

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 400 BadRequest - something failed with the execution or parsing of your query
        - 401 Unauthorized
      operationId: PutByQueryParquet
      parameters:
      - description: Name to apply to the query in logs and `Sys.Logs.HcQueryStart`
        example: Get tables/fields
        explode: true
        in: query
        name: queryName
        required: false
        schema:
          type: string
        style: form
      - description: "In seconds: <0 → ∞, 0 → 120s"
        example: 120
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      requestBody:
        content:
          text/plain:
            example: select generate justfile test_sdk from sys.field
            schema:
              type: string
        description: LuminesceSql to Execute (may be multi-line)
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "PutByQueryParquet: Executes Sql, returned in Parquet format, where\
        \ the sql is the post-body url."
      tags:
      - Sql Execution
      x-fbn-apistatus: Stable
      x-content-type: text/plain
      x-accepts: application/json
  /api/Sql/parquet/{query}:
    get:
      description: |2

        For simple single-line query execution via the url.
        e.g. `select ^ from Sys.Field order by 1, 2`

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 400 BadRequest - something failed with the execution or parsing of your query
        - 401 Unauthorized
      operationId: GetByQueryParquet
      parameters:
      - description: LuminesceSql to Execute (must be one line only)
        example: "select ^ from Sys.Field order by 1, 2"
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: Name to apply to the query in logs and `Sys.Logs.HcQueryStart`
        example: Get tables/fields
        explode: true
        in: query
        name: queryName
        required: false
        schema:
          type: string
        style: form
      - description: "In seconds: <0 → ∞, 0 → 120s"
        example: 120
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "GetByQueryParquet: Executes Sql, returned in Parquet (.parquet) format\
        \ (as a file to be downloaded) format, where the sql is simply in the url."
      tags:
      - Sql Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/Sql/pipe:
    put:
      description: |2

        For more complex LuminesceSql a PUT will allow for longer Sql.
        e.g.:
        ```sql
        @@cutoff = select #2020-02-01#;
        @issues = select Id, SortId, Summary, Created, Updated from Dev.Jira.Issue where Project='HC' and Created < @@cutoff and Updated > @@cutoff;

        select i.Id, i.SortId, i.Summary, LinkText, LinkedIssueId, LinkedIssueSortId, LinkedIssueSummary
        from @issues i
        inner join Dev.Jira.Issue.Link li
         on i.Id = li.IssueId
        ```

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 400 BadRequest - something failed with the execution or parsing of your query
        - 401 Unauthorized
      operationId: PutByQueryPipe
      parameters:
      - description: Name to apply to the query in logs and `Sys.Logs.HcQueryStart`
        example: Get tables/fields
        explode: true
        in: query
        name: queryName
        required: false
        schema:
          type: string
        style: form
      - description: Makes this a file-download request (as opposed to returning the
          data in the response-body)
        explode: true
        in: query
        name: download
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      - description: "In seconds: <0 → ∞, 0 → 120s"
        example: 120
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      requestBody:
        content:
          text/plain:
            example: select generate justfile test_sdk from sys.field
            schema:
              type: string
        description: LuminesceSql to Execute (may be multi-line)
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "PutByQueryPipe: Executes Sql, returned in pipe-delimited format, where\
        \ the sql is the post-body url."
      tags:
      - Sql Execution
      x-fbn-apistatus: Stable
      x-content-type: text/plain
      x-accepts: application/json
  /api/Sql/pipe/{query}:
    get:
      description: |2

        For simple single-line query execution via the url.
        e.g. `select ^ from Sys.Field order by 1, 2`

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 400 BadRequest - something failed with the execution or parsing of your query
        - 401 Unauthorized
      operationId: GetByQueryPipe
      parameters:
      - description: LuminesceSql to Execute (must be one line only)
        example: "select ^ from Sys.Field order by 1, 2"
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: Name to apply to the query in logs and `Sys.Logs.HcQueryStart`
        example: Get tables/fields
        explode: true
        in: query
        name: queryName
        required: false
        schema:
          type: string
        style: form
      - description: Makes this a file-download request (as opposed to returning the
          data in the response-body)
        explode: true
        in: query
        name: download
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      - description: "In seconds: <0 → ∞, 0 → 120s"
        example: 120
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "GetByQueryPipe: Executes Sql, returned in pipe-delimited format, where\
        \ the sql is simply in the url."
      tags:
      - Sql Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/Sql/pretty:
    put:
      description: |2

        This formats SQL (given a set of options as to how to do so).
        It takes some SQL (or a fragment thereof, it need not fully parse as yet and certainly need not execute correctly)
        and returns the reformatted version.
        e.g.
        ```sql
        select x,y,z from a inner join b on a.x=b.x where x>y or y!=z
        ```
        becomes
        ```sql
        select x, y, z
        from a
        inner join b
         on a.x = b.x
        where x > y
         or y != z
        ```
      operationId: PutQueryToFormat
      parameters:
      - description: Should commas be after an expression (as opposed to before)
        explode: true
        in: query
        name: trailingCommas
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-nullable: true
      - description: Should key words be capitalized
        explode: true
        in: query
        name: uppercaseKeywords
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      - description: Should clauses on joins be given line breaks?
        explode: true
        in: query
        name: breakJoinOnSections
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-nullable: true
      - description: Should comma-lists have spaces after the commas?
        explode: true
        in: query
        name: spaceAfterExpandedComma
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-nullable: true
      - description: Should the "nicest" key words be used? (e.g. JOIN -> INNER JOIN)
        explode: true
        in: query
        name: keywordStandardization
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-nullable: true
      - description: "Should comma-lists (e.g. select a,b,c) have line breaks added?"
        explode: true
        in: query
        name: expandCommaLists
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      - description: Should IN-lists have line breaks added?
        explode: true
        in: query
        name: expandInLists
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      - description: Should boolean expressions have line breaks added?
        explode: true
        in: query
        name: expandBooleanExpressions
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-nullable: true
      - description: Should between conditions have line breaks added?
        explode: true
        in: query
        name: expandBetweenConditions
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-nullable: true
      - description: Should case-statements have line breaks added?
        explode: true
        in: query
        name: expandCaseStatements
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-nullable: true
      - description: Maximum number of characters to allow on one line (if possible)
        explode: true
        in: query
        name: maxLineWidth
        required: false
        schema:
          default: 120
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: Should the be a space before trailing single line comments?
        explode: true
        in: query
        name: spaceBeforeTrailingSingleLineComments
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-nullable: true
      - description: Should an additional line break be added after multi-line comments?
        explode: true
        in: query
        name: multilineCommentExtraLineBreak
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      requestBody:
        content:
          text/plain:
            example: select generate justfile test_sdk from sys.field
            schema:
              type: string
        description: LuminesceSql to Pretty-Print. Even if it doesn't parse an attempt
          will be made to format it
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "PutQueryToFormat: Executes Sql, returned in JSON format, where the\
        \ sql is the post-body url."
      tags:
      - Sql Execution
      x-fbn-apistatus: Stable
      x-content-type: text/plain
      x-accepts: application/json
  /api/Sql/sqlite:
    put:
      description: |2

        For more complex LuminesceSql a PUT will allow for longer Sql.
        e.g.:
        ```sql
        @@cutoff = select #2020-02-01#;
        @issues = select Id, SortId, Summary, Created, Updated from Dev.Jira.Issue where Project='HC' and Created < @@cutoff and Updated > @@cutoff;

        select i.Id, i.SortId, i.Summary, LinkText, LinkedIssueId, LinkedIssueSortId, LinkedIssueSummary
        from @issues i
        inner join Dev.Jira.Issue.Link li
         on i.Id = li.IssueId
        ```

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 400 BadRequest - something failed with the execution or parsing of your query
        - 401 Unauthorized
      operationId: PutByQuerySqlite
      parameters:
      - description: Name to apply to the query in logs and `Sys.Logs.HcQueryStart`
        example: Get tables/fields
        explode: true
        in: query
        name: queryName
        required: false
        schema:
          type: string
        style: form
      - description: "In seconds: <0 → ∞, 0 → 120s"
        example: 120
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      requestBody:
        content:
          text/plain:
            example: select generate justfile test_sdk from sys.field
            schema:
              type: string
        description: LuminesceSql to Execute (may be multi-line)
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "PutByQuerySqlite: Executes Sql, returned in SqLite DB (sqlite3) format\
        \ (as a file to be downloaded), where the sql is the post-body url."
      tags:
      - Sql Execution
      x-fbn-apistatus: Stable
      x-content-type: text/plain
      x-accepts: application/json
  /api/Sql/sqlite/{query}:
    get:
      description: |2

        For simple single-line query execution via the url.
        e.g. `select ^ from Sys.Field order by 1, 2`

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 400 BadRequest - something failed with the execution or parsing of your query
        - 401 Unauthorized
      operationId: GetByQuerySqlite
      parameters:
      - description: LuminesceSql to Execute (must be one line only)
        example: "select ^ from Sys.Field order by 1, 2"
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: Name to apply to the query in logs and `Sys.Logs.HcQueryStart`
        example: Get tables/fields
        explode: true
        in: query
        name: queryName
        required: false
        schema:
          type: string
        style: form
      - description: "In seconds: <0 → ∞, 0 → 120s"
        example: 120
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "GetByQuerySqlite: Executes Sql, returned in SqLite DB (sqlite3) format\
        \ (as a file to be downloaded) format, where the sql is simply in the url."
      tags:
      - Sql Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/Sql/todesign:
    put:
      description: SQL to attempt to create a Design object from
      operationId: PutSqlToQueryDesign
      parameters:
      - description: "Should the table be validated against the users' view of Sys.Field\
          \ to fill in DataTypes, etc.?"
        explode: true
        in: query
        name: validateWithMetadata
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-nullable: true
      requestBody:
        content:
          text/plain:
            example: |-
              SELECT
               [TableName],
               Count(distinct [FieldName]) as [NumberOfFields]
              FROM
               [Sys.Field]
              WHERE
               ([TableName] = 'Sys.Registration')
              GROUP BY
               [TableName]
              ORDER BY
               [DataType]
              LIMIT 42
            schema:
              type: string
        description: SQL query to generate the design object from
        required: true
      responses:
        "200":
          content:
            text/plain:
              example: "{\"tableName\":\"Sys.Field\",\"fields\":[{\"name\":\"TableName\"\
                ,\"dataType\":\"Text\",\"shouldSelect\":true,\"filters\":[{\"operator\"\
                :\"Eq\",\"value\":\"Sys.Registration\"}],\"aggregations\":[]},{\"\
                name\":\"FieldName\",\"dataType\":\"Text\",\"shouldSelect\":true,\"\
                filters\":[],\"aggregations\":[{\"type\":\"count_distinct\",\"alias\"\
                :\"NumberOfFields\"}]}],\"orderBy\":[{\"field\":\"DataType\",\"direction\"\
                :\"asc\"}],\"limit\":42,\"warnings\":[],\"availableFields\":[]}"
              schema:
                type: string
            application/json:
              example: "{\"tableName\":\"Sys.Field\",\"fields\":[{\"name\":\"TableName\"\
                ,\"dataType\":\"Text\",\"shouldSelect\":true,\"filters\":[{\"operator\"\
                :\"Eq\",\"value\":\"Sys.Registration\"}],\"aggregations\":[]},{\"\
                name\":\"FieldName\",\"dataType\":\"Text\",\"shouldSelect\":true,\"\
                filters\":[],\"aggregations\":[{\"type\":\"count_distinct\",\"alias\"\
                :\"NumberOfFields\"}]}],\"orderBy\":[{\"field\":\"DataType\",\"direction\"\
                :\"asc\"}],\"limit\":42,\"warnings\":[],\"availableFields\":[]}"
              schema:
                type: string
            text/json:
              example: "{\"tableName\":\"Sys.Field\",\"fields\":[{\"name\":\"TableName\"\
                ,\"dataType\":\"Text\",\"shouldSelect\":true,\"filters\":[{\"operator\"\
                :\"Eq\",\"value\":\"Sys.Registration\"}],\"aggregations\":[]},{\"\
                name\":\"FieldName\",\"dataType\":\"Text\",\"shouldSelect\":true,\"\
                filters\":[],\"aggregations\":[{\"type\":\"count_distinct\",\"alias\"\
                :\"NumberOfFields\"}]}],\"orderBy\":[{\"field\":\"DataType\",\"direction\"\
                :\"asc\"}],\"limit\":42,\"warnings\":[],\"availableFields\":[]}"
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] PutSqlToQueryDesign: Generates a SQL-design object\
        \ from SQL string, if possible."
      tags:
      - Sql Execution
      x-fbn-apistatus: Experimental
      x-content-type: text/plain
      x-accepts: application/json
  /api/Sql/tofilereaddesign:
    put:
      description: SQL to attempt to create a Design object from
      operationId: PutSqlToFileReadDesign
      parameters:
      - description: Should the available sources be determined from `Sys.Registration`
        explode: true
        in: query
        name: determineAvailableSources
        required: false
        schema:
          default: true
          type: boolean
        style: form
        x-nullable: true
      requestBody:
        content:
          text/plain:
            example: "@x = \nuse Drive.Csv\n --file=/some/folder/somefile.csv\nenduse;\n\
              \nselect generate justfile test_sdk from @x;"
            schema:
              type: string
        description: SQL query to generate the file read design object from
      responses:
        "200":
          content:
            text/plain:
              example: "{\"limit\":0,\"source\":{\"location\":\"Drive\",\"type\":\"\
                Csv\"},\"filePath\":\"/some/folder\",\"folderFilter\":\".*\\\\.csv\"\
                ,\"addFileName\":true}"
              schema:
                type: string
            application/json:
              example: "{\"limit\":0,\"source\":{\"location\":\"Drive\",\"type\":\"\
                Csv\"},\"filePath\":\"/some/folder\",\"folderFilter\":\".*\\\\.csv\"\
                ,\"addFileName\":true}"
              schema:
                type: string
            text/json:
              example: "{\"limit\":0,\"source\":{\"location\":\"Drive\",\"type\":\"\
                Csv\"},\"filePath\":\"/some/folder\",\"folderFilter\":\".*\\\\.csv\"\
                ,\"addFileName\":true}"
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] PutSqlToFileReadDesign: Generates a SQL-file-read-design\
        \ object from SQL string, if possible."
      tags:
      - Sql Execution
      x-fbn-apistatus: Experimental
      x-content-type: text/plain
      x-accepts: application/json
  /api/Sql/toviewdesign:
    put:
      description: SQL which creates a view into a structured ConvertToViewData object
      operationId: PutSqlToViewDesign
      requestBody:
        content:
          text/plain:
            example: "@x = \nuse Sys.Admin.SetupView\n --provider=YourView\n----\n\
              select generate justfile test_sdk from Lusid.Instrument\nenduse;\n\n\
              select generate justfile test_sdk from @x;"
            schema:
              type: string
        description: SQL Query to generate the ConvertToViewData object from
        required: true
      responses:
        "200":
          content:
            text/plain:
              example: "{\"query\":\"select generate justfile test_sdk from Lusid.Instrument.bond\"\
                ,\"name\":\"Views.MyView\",\"description\":\"This is a tooltip for\
                \ the view as a whole\",\"documentationLink\":\"https://mydocumentationlink.com\"\
                ,\"viewParameters\":[{\"name\":\"MyTextParam\",\"dataType\":\"Text\"\
                ,\"value\":\"Portfolio\",\"isTableDataMandatory\":false,\"description\"\
                :\"This is a parameter tooltip\"},{\"name\":\"EffectiveAt\",\"dataType\"\
                :\"Date\",\"value\":\"2023-05-03\",\"isTableDataMandatory\":false,\"\
                description\":\"This is a parameter tooltip\"},{\"name\":\"IsActive\"\
                ,\"dataType\":\"Boolean\",\"value\":\"true\",\"isTableDataMandatory\"\
                :true,\"description\":\"This is a parameter tooltip\"},{\"name\":\"\
                EndUserTable\",\"dataType\":\"Table\",\"value\":\"@end_user_table\"\
                ,\"isTableDataMandatory\":true,\"description\":\"This is a parameter\
                \ tooltip\"}],\"otherParameters\":{}}"
              schema:
                type: string
            application/json:
              example: "{\"query\":\"select generate justfile test_sdk from Lusid.Instrument.bond\"\
                ,\"name\":\"Views.MyView\",\"description\":\"This is a tooltip for\
                \ the view as a whole\",\"documentationLink\":\"https://mydocumentationlink.com\"\
                ,\"viewParameters\":[{\"name\":\"MyTextParam\",\"dataType\":\"Text\"\
                ,\"value\":\"Portfolio\",\"isTableDataMandatory\":false,\"description\"\
                :\"This is a parameter tooltip\"},{\"name\":\"EffectiveAt\",\"dataType\"\
                :\"Date\",\"value\":\"2023-05-03\",\"isTableDataMandatory\":false,\"\
                description\":\"This is a parameter tooltip\"},{\"name\":\"IsActive\"\
                ,\"dataType\":\"Boolean\",\"value\":\"true\",\"isTableDataMandatory\"\
                :true,\"description\":\"This is a parameter tooltip\"},{\"name\":\"\
                EndUserTable\",\"dataType\":\"Table\",\"value\":\"@end_user_table\"\
                ,\"isTableDataMandatory\":true,\"description\":\"This is a parameter\
                \ tooltip\"}],\"otherParameters\":{}}"
              schema:
                type: string
            text/json:
              example: "{\"query\":\"select generate justfile test_sdk from Lusid.Instrument.bond\"\
                ,\"name\":\"Views.MyView\",\"description\":\"This is a tooltip for\
                \ the view as a whole\",\"documentationLink\":\"https://mydocumentationlink.com\"\
                ,\"viewParameters\":[{\"name\":\"MyTextParam\",\"dataType\":\"Text\"\
                ,\"value\":\"Portfolio\",\"isTableDataMandatory\":false,\"description\"\
                :\"This is a parameter tooltip\"},{\"name\":\"EffectiveAt\",\"dataType\"\
                :\"Date\",\"value\":\"2023-05-03\",\"isTableDataMandatory\":false,\"\
                description\":\"This is a parameter tooltip\"},{\"name\":\"IsActive\"\
                ,\"dataType\":\"Boolean\",\"value\":\"true\",\"isTableDataMandatory\"\
                :true,\"description\":\"This is a parameter tooltip\"},{\"name\":\"\
                EndUserTable\",\"dataType\":\"Table\",\"value\":\"@end_user_table\"\
                ,\"isTableDataMandatory\":true,\"description\":\"This is a parameter\
                \ tooltip\"}],\"otherParameters\":{}}"
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] PutSqlToViewDesign: Generates a structured view creation\
        \ design from existing view creation SQL."
      tags:
      - Sql Execution
      x-fbn-apistatus: Experimental
      x-content-type: text/plain
      x-accepts: application/json
  /api/Sql/xml:
    put:
      description: |2

        For more complex LuminesceSql a PUT will allow for longer Sql.
        e.g.:
        ```sql
        @@cutoff = select #2020-02-01#;
        @issues = select Id, SortId, Summary, Created, Updated from Dev.Jira.Issue where Project='HC' and Created < @@cutoff and Updated > @@cutoff;

        select i.Id, i.SortId, i.Summary, LinkText, LinkedIssueId, LinkedIssueSortId, LinkedIssueSummary
        from @issues i
        inner join Dev.Jira.Issue.Link li
         on i.Id = li.IssueId
        ```

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 400 BadRequest - something failed with the execution or parsing of your query
        - 401 Unauthorized
      operationId: PutByQueryXml
      parameters:
      - description: Name to apply to the query in logs and `Sys.Logs.HcQueryStart`
        example: Get tables/fields
        explode: true
        in: query
        name: queryName
        required: false
        schema:
          type: string
        style: form
      - description: Makes this a file-download request (as opposed to returning the
          data in the response-body)
        explode: true
        in: query
        name: download
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      - description: "In seconds: <0 → ∞, 0 → 120s"
        example: 120
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      requestBody:
        content:
          text/plain:
            example: select generate justfile test_sdk from sys.field
            schema:
              type: string
        description: LuminesceSql to Execute (may be multi-line)
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "PutByQueryXml: Executes Sql, returned in Xml format, where the sql\
        \ is the post-body url."
      tags:
      - Sql Execution
      x-fbn-apistatus: Stable
      x-content-type: text/plain
      x-accepts: application/json
  /api/Sql/xml/{query}:
    get:
      description: |2

        For simple single-line query execution via the url.
        e.g. `select ^ from Sys.Field order by 1, 2`

        The following error codes are to be anticipated with standard Problem Detail reports:
        - 400 BadRequest - something failed with the execution or parsing of your query
        - 401 Unauthorized
      operationId: GetByQueryXml
      parameters:
      - description: LuminesceSql to Execute (must be one line only)
        example: "select ^ from Sys.Field order by 1, 2"
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: Name to apply to the query in logs and `Sys.Logs.HcQueryStart`
        example: Get tables/fields
        explode: true
        in: query
        name: queryName
        required: false
        schema:
          type: string
        style: form
      - description: Makes this a file-download request (as opposed to returning the
          data in the response-body)
        explode: true
        in: query
        name: download
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      - description: "In seconds: <0 → ∞, 0 → 120s"
        example: 120
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "GetByQueryXml: Executes Sql, returned in Xml format, where the sql\
        \ is simply in the url."
      tags:
      - Sql Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/SqlBackground:
    put:
      description: "\nAllow for starting a potentially long running query and getting\
        \ back an immediate response with how to \n- fetch the data in various formats\
        \ (if available, or if not simply being informed it is not yet ready)\n- view\
        \ progress information (up until this point)\n- cancel the query (if still\
        \ running) / clear the data (if already returned)\n\nThis can still error\
        \ on things like an outright syntax error, but more runtime errors (e.g. from\
        \ providers) will not\ncause this to error (that will happen when attempting\
        \ to fetch data)\n\nHere is an example that intentionally takes one minute\
        \ to run:\n\n```sql\nselect Str, Takes500Ms from Testing1K where UseLinq =\
        \ true and [Int] <= 120\n```\n\nThis is the only place in the Luminesce WebAPI\
        \ where the following is supported.\nThis will allow for the same user running\
        \ a character-identical query not kick off a new query but simply be returned\
        \ a reference \nto the already running one for up to `N` seconds (where `N`\
        \ should be `<=` `keepForSeconds`).\n\nThe following error codes are to be\
        \ anticipated with standard Problem Detail reports:\n- 400 BadRequest - there\
        \ was something wrong with your query syntax (the issue was detected at parse-time)\n\
        - 401 Unauthorized\n"
      operationId: StartQuery
      parameters:
      - description: A name for this query. This goes into logs and is available in
          `Sys.Logs.HcQueryStart`.
        example: Intentionally slow test query
        explode: true
        in: query
        name: queryName
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum time the query may run for, in seconds: <0 → ∞, 0 →\
          \ 7200 (2h)"
        example: 1200
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "Maximum time the result may be kept for, in seconds: <0 → 1200\
          \ (20m), 0 → 28800 (8h), max = 2,678,400 (31d)"
        example: 7200
        explode: true
        in: query
        name: keepForSeconds
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      requestBody:
        content:
          text/plain:
            example: "select Str, Takes500Ms from Testing1K where UseLinq = true and\
              \ [Int] <= 120"
            schema:
              type: string
        description: The LuminesceSql query to kick off.
        required: true
      responses:
        "202":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BackgroundQueryResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundQueryResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BackgroundQueryResponse'
          description: Accepted
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "StartQuery: Starts to Execute LuminesceSql in the background."
      tags:
      - Sql Background Execution
      x-fbn-apistatus: Stable
      x-content-type: text/plain
      x-accepts: application/json
  /api/SqlBackground/{executionId}:
    delete:
      description: |
        Cancel the query (if still running) / clear the data (if already returned)
        The following error codes are to be anticipated with standard Problem Detail reports:
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't exist and is not running.
      operationId: CancelQuery
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BackgroundQueryCancelResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundQueryCancelResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BackgroundQueryCancelResponse'
          description: Success
      security:
      - oauth2: []
      summary: "CancelQuery: Cancels (if running) or clears the data from (if completed)\
        \ a previously started query"
      tags:
      - Sql Background Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
    get:
      description: |-
        View progress information (up until this point)
        The following error codes are to be anticipated most with standard Problem Detail reports:
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't exist and is not running.
        - 429 Too Many Requests : Please try your request again soon
         1. The query has been executed successfully in the past yet the server-instance receiving this request (e.g. from a load balancer) doesn't yet have this data available.
         1. By virtue of the request you have just placed this will have started to load from the persisted cache and will soon be available.
         1. It is also the case that the original server-instance to process the original query is likely to already be able to service this request.
      operationId: GetProgressOf
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BackgroundQueryProgressResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundQueryProgressResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BackgroundQueryProgressResponse'
          description: Success
      security:
      - oauth2: []
      summary: "GetProgressOf: View progress information (up until this point)"
      tags:
      - Sql Background Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/SqlBackground/{executionId}/csv:
    get:
      description: |-
        Fetch the data in various formats (if available, or if not simply being informed it is not yet ready)
        The following error codes are to be anticipated most with standard Problem Detail reports:
        - 400 BadRequest : Something failed with the execution of your query
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't (yet) exist.
        - 429 Too Many Requests : Please try your request again soon
         1. The query has been executed successfully in the past yet the server-instance receiving this request (e.g. from a load balancer) doesn't yet have this data available.
         1. By virtue of the request you have just placed this will have started to load from the persisted cache and will soon be available.
         1. It is also the case that the original server-instance to process the original query is likely to already be able to service this request.
      operationId: FetchQueryResultCsv
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: Makes this a file-download request (as opposed to returning the
          data in the response-body)
        explode: true
        in: query
        name: download
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      - description: "Order the results by these fields.\r\n Use the `-` sign to denote\
          \ descending order, e.g. `-MyFieldName`. Numeric indexes may be used also,\
          \ e.g. `2,-3`.\r\n Multiple fields can be denoted by a comma e.g. `-MyFieldName,AnotherFieldName,-AFurtherFieldName`.\r\
          \n Default is null, the sort order specified in the query itself."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          maxLength: 16384
          minLength: 1
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: An ODATA filter per Finbourne.Filtering syntax.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: "Default is null (meaning return all columns in the original\
          \ query itself).\r\nThe values are in terms of the result column name from\
          \ the original data set and are comma delimited.\r\nThe power of this comes\
          \ in that you may aggregate the data if you wish\r\n(that is the main reason\
          \ for allowing this, in fact).\r\ne.g.:\r\n- `MyField`\r\n- `Max(x) FILTER\
          \ (WHERE y > 12) as ABC` (max of a field, if another field lets it qualify,\
          \ with a nice column name)\r\n- `count(*)` (count the rows for the given\
          \ group, that would produce a rather ugly column name, but it works)\r\n\
          - `count(distinct x) as numOfXs`\r\nIf there was an illegal character in\
          \ a field you are selecting from, you are responsible for bracketing it\
          \ with [ ]. \r\ne.g.\r\n- `some_field, count(*) as a, max(x) as b, min([column\
          \ with space in name]) as nice_name`\r\n where you would likely want to\
          \ pass `1` as the `groupBy` also."
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: "Groups by the specified fields.\r\n A comma delimited list of:\
          \ 1 based numeric indexes (cleaner), or repeats of the select expressions\
          \ (a bit verbose and must match exactly).\r\n e.g. `2,3`, `myColumn`.\r\n\
          \ Default is null (meaning no grouping will be performed on the selected\
          \ columns).\r\n This applies only over the result set being requested here,\
          \ meaning indexes into the \"select\" parameter fields.\r\n Only specify\
          \ this if you are selecting aggregations in the \"select\" parameter."
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      - description: "When paginating, only return this number of records, page should\
          \ also be specified."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "0-N based on chunk sized determined by the limit, ignored if\
          \ limit < 1."
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: Delimiter string to override the default
        explode: true
        in: query
        name: delimiter
        required: false
        schema:
          type: string
        style: form
      - description: Escape character to override the default
        explode: true
        in: query
        name: escape
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "FetchQueryResultCsv: Fetches the result from a previously started\
        \ query, in CSV format."
      tags:
      - Sql Background Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/SqlBackground/{executionId}/excel:
    get:
      description: |-
        Fetch the data in various formats (if available, or if not simply being informed it is not yet ready)
        The following error codes are to be anticipated most with standard Problem Detail reports:
        - 400 BadRequest : Something failed with the execution of your query
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't (yet) exist.
        - 429 Too Many Requests : Please try your request again soon
         1. The query has been executed successfully in the past yet the server-instance receiving this request (e.g. from a load balancer) doesn't yet have this data available.
         1. By virtue of the request you have just placed this will have started to load from the persisted cache and will soon be available.
         1. It is also the case that the original server-instance to process the original query is likely to already be able to service this request.
      operationId: FetchQueryResultExcel
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: "Order the results by these fields.\r\n Use the `-` sign to denote\
          \ descending order, e.g. `-MyFieldName`. Numeric indexes may be used also,\
          \ e.g. `2,-3`.\r\n Multiple fields can be denoted by a comma e.g. `-MyFieldName,AnotherFieldName,-AFurtherFieldName`.\r\
          \n Default is null, the sort order specified in the query itself."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          maxLength: 16384
          minLength: 1
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: An ODATA filter per Finbourne.Filtering syntax.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: "Default is null (meaning return all columns in the original\
          \ query itself).\r\nThe values are in terms of the result column name from\
          \ the original data set and are comma delimited.\r\nThe power of this comes\
          \ in that you may aggregate the data if you wish\r\n(that is the main reason\
          \ for allowing this, in fact).\r\ne.g.:\r\n- `MyField`\r\n- `Max(x) FILTER\
          \ (WHERE y > 12) as ABC` (max of a field, if another field lets it qualify,\
          \ with a nice column name)\r\n- `count(*)` (count the rows for the given\
          \ group, that would produce a rather ugly column name, but it works)\r\n\
          - `count(distinct x) as numOfXs`\r\nIf there was an illegal character in\
          \ a field you are selecting from, you are responsible for bracketing it\
          \ with [ ]. \r\ne.g.\r\n- `some_field, count(*) as a, max(x) as b, min([column\
          \ with space in name]) as nice_name`\r\n where you would likely want to\
          \ pass `1` as the `groupBy` also."
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: "Groups by the specified fields.\r\n A comma delimited list of:\
          \ 1 based numeric indexes (cleaner), or repeats of the select expressions\
          \ (a bit verbose and must match exactly).\r\n e.g. `2,3`, `myColumn`.\r\n\
          \ Default is null (meaning no grouping will be performed on the selected\
          \ columns).\r\n This applies only over the result set being requested here,\
          \ meaning indexes into the \"select\" parameter fields.\r\n Only specify\
          \ this if you are selecting aggregations in the \"select\" parameter."
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "FetchQueryResultExcel: Fetches the result from a previously started\
        \ query, in Excel format."
      tags:
      - Sql Background Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/SqlBackground/{executionId}/histogram:
    get:
      description: |-
        Fetch the histogram in Json format (if available, or if not simply being informed it is not yet ready)
        The following error codes are to be anticipated with standard Problem Detail reports:
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't (yet) exist.
        - 429 Too Many Requests : Please try your request again soon
         1. The query has been executed successfully in the past yet the server-instance receiving this request (e.g. from a load balancer) doesn't yet have this data available.
         1. By virtue of the request you have just placed this will have started to load from the persisted cache and will soon be available.
         1. It is also the case that the original server-instance to process the original query is likely to already be able to service this request.
      operationId: FetchQueryResultHistogram
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the timestamp field used in building the histogram
        explode: true
        in: query
        name: timestampFieldName
        required: true
        schema:
          type: string
        style: form
      - description: Start point (of the timestampFieldName field) for the histogram
        explode: true
        in: query
        name: startAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: End point (of the timestampFieldName field) for the histogram
        explode: true
        in: query
        name: endAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: Optional histogram bucket width. If not provided a set number
          of buckets between start/end range will be generated.
        explode: true
        in: query
        name: bucketSize
        required: false
        schema:
          format: date-span
          type: string
        style: form
      - description: An ODATA filter per Finbourne.Filtering syntax.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: Should this be text/json (not json-encoded-as-a-string)
        explode: true
        in: query
        name: jsonProper
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "FetchQueryResultHistogram: Fetches the result from a previously started\
        \ query, converts it to a histogram (counts in buckets)."
      tags:
      - Sql Background Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/SqlBackground/{executionId}/json:
    get:
      description: |-
        Fetch the data in various formats (if available, or if not simply being informed it is not yet ready)
        The following error codes are to be anticipated most with standard Problem Detail reports:
        - 400 BadRequest : Something failed with the execution of your query
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't (yet) exist.
        - 429 Too Many Requests : Please try your request again soon
         1. The query has been executed successfully in the past yet the server-instance receiving this request (e.g. from a load balancer) doesn't yet have this data available.
         1. By virtue of the request you have just placed this will have started to load from the persisted cache and will soon be available.
         1. It is also the case that the original server-instance to process the original query is likely to already be able to service this request.
      operationId: FetchQueryResultJson
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: "Order the results by these fields.\r\n Use the `-` sign to denote\
          \ descending order, e.g. `-MyFieldName`. Numeric indexes may be used also,\
          \ e.g. `2,-3`.\r\n Multiple fields can be denoted by a comma e.g. `-MyFieldName,AnotherFieldName,-AFurtherFieldName`.\r\
          \n Default is null, the sort order specified in the query itself."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          maxLength: 16384
          minLength: 1
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: An ODATA filter per Finbourne.Filtering syntax.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: "Default is null (meaning return all columns in the original\
          \ query itself).\r\nThe values are in terms of the result column name from\
          \ the original data set and are comma delimited.\r\nThe power of this comes\
          \ in that you may aggregate the data if you wish\r\n(that is the main reason\
          \ for allowing this, in fact).\r\ne.g.:\r\n- `MyField`\r\n- `Max(x) FILTER\
          \ (WHERE y > 12) as ABC` (max of a field, if another field lets it qualify,\
          \ with a nice column name)\r\n- `count(*)` (count the rows for the given\
          \ group, that would produce a rather ugly column name, but it works)\r\n\
          - `count(distinct x) as numOfXs`\r\nIf there was an illegal character in\
          \ a field you are selecting from, you are responsible for bracketing it\
          \ with [ ]. \r\ne.g.\r\n- `some_field, count(*) as a, max(x) as b, min([column\
          \ with space in name]) as nice_name`\r\n where you would likely want to\
          \ pass `1` as the `groupBy` also."
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: "Groups by the specified fields.\r\n A comma delimited list of:\
          \ 1 based numeric indexes (cleaner), or repeats of the select expressions\
          \ (a bit verbose and must match exactly).\r\n e.g. `2,3`, `myColumn`.\r\n\
          \ Default is null (meaning no grouping will be performed on the selected\
          \ columns).\r\n This applies only over the result set being requested here,\
          \ meaning indexes into the \"select\" parameter fields.\r\n Only specify\
          \ this if you are selecting aggregations in the \"select\" parameter."
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      - description: "When paginating, only return this number of records, page should\
          \ also be specified."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "0-N based on chunk sized determined by the limit, ignored if\
          \ limit < 1."
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "FetchQueryResultJson: Fetches the result from a previously started\
        \ query, in JSON string format.\r\nPlease move to '/jsonProper' instead. This\
        \ may be marked as Deprecated in the future."
      tags:
      - Sql Background Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/SqlBackground/{executionId}/jsonProper:
    get:
      description: |-
        Fetch the data in various formats (if available, or if not simply being informed it is not yet ready)
        The following error codes are to be anticipated most with standard Problem Detail reports:
        - 400 BadRequest : Something failed with the execution of your query
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't (yet) exist.
        - 429 Too Many Requests : Please try your request again soon
         1. The query has been executed successfully in the past yet the server-instance receiving this request (e.g. from a load balancer) doesn't yet have this data available.
         1. By virtue of the request you have just placed this will have started to load from the persisted cache and will soon be available.
         1. It is also the case that the original server-instance to process the original query is likely to already be able to service this request.
      operationId: FetchQueryResultJsonProper
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: Makes this a file-download request (as opposed to returning the
          data in the response-body)
        explode: true
        in: query
        name: download
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      - description: "Order the results by these fields.\r\n Use the `-` sign to denote\
          \ descending order, e.g. `-MyFieldName`. Numeric indexes may be used also,\
          \ e.g. `2,-3`.\r\n Multiple fields can be denoted by a comma e.g. `-MyFieldName,AnotherFieldName,-AFurtherFieldName`.\r\
          \n Default is null, the sort order specified in the query itself."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          maxLength: 16384
          minLength: 1
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: An ODATA filter per Finbourne.Filtering syntax.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: "Default is null (meaning return all columns in the original\
          \ query itself).\r\nThe values are in terms of the result column name from\
          \ the original data set and are comma delimited.\r\nThe power of this comes\
          \ in that you may aggregate the data if you wish\r\n(that is the main reason\
          \ for allowing this, in fact).\r\ne.g.:\r\n- `MyField`\r\n- `Max(x) FILTER\
          \ (WHERE y > 12) as ABC` (max of a field, if another field lets it qualify,\
          \ with a nice column name)\r\n- `count(*)` (count the rows for the given\
          \ group, that would produce a rather ugly column name, but it works)\r\n\
          - `count(distinct x) as numOfXs`\r\nIf there was an illegal character in\
          \ a field you are selecting from, you are responsible for bracketing it\
          \ with [ ]. \r\ne.g.\r\n- `some_field, count(*) as a, max(x) as b, min([column\
          \ with space in name]) as nice_name`\r\n where you would likely want to\
          \ pass `1` as the `groupBy` also."
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: "Groups by the specified fields.\r\n A comma delimited list of:\
          \ 1 based numeric indexes (cleaner), or repeats of the select expressions\
          \ (a bit verbose and must match exactly).\r\n e.g. `2,3`, `myColumn`.\r\n\
          \ Default is null (meaning no grouping will be performed on the selected\
          \ columns).\r\n This applies only over the result set being requested here,\
          \ meaning indexes into the \"select\" parameter fields.\r\n Only specify\
          \ this if you are selecting aggregations in the \"select\" parameter."
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      - description: "When paginating, only return this number of records, page should\
          \ also be specified."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "0-N based on chunk sized determined by the limit, ignored if\
          \ limit < 1."
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "FetchQueryResultJsonProper: Fetches the result from a previously started\
        \ query, in JSON format."
      tags:
      - Sql Background Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/SqlBackground/{executionId}/parquet:
    get:
      description: |-
        Fetch the data in various formats (if available, or if not simply being informed it is not yet ready)
        The following error codes are to be anticipated most with standard Problem Detail reports:
        - 400 BadRequest : Something failed with the execution of your query
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't (yet) exist.
        - 429 Too Many Requests : Please try your request again soon
         1. The query has been executed successfully in the past yet the server-instance receiving this request (e.g. from a load balancer) doesn't yet have this data available.
         1. By virtue of the request you have just placed this will have started to load from the persisted cache and will soon be available.
         1. It is also the case that the original server-instance to process the original query is likely to already be able to service this request.
      operationId: FetchQueryResultParquet
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: "Order the results by these fields.\r\n Use the `-` sign to denote\
          \ descending order, e.g. `-MyFieldName`. Numeric indexes may be used also,\
          \ e.g. `2,-3`.\r\n Multiple fields can be denoted by a comma e.g. `-MyFieldName,AnotherFieldName,-AFurtherFieldName`.\r\
          \n Default is null, the sort order specified in the query itself."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          maxLength: 16384
          minLength: 1
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: An ODATA filter per Finbourne.Filtering syntax.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: "Default is null (meaning return all columns in the original\
          \ query itself).\r\nThe values are in terms of the result column name from\
          \ the original data set and are comma delimited.\r\nThe power of this comes\
          \ in that you may aggregate the data if you wish\r\n(that is the main reason\
          \ for allowing this, in fact).\r\ne.g.:\r\n- `MyField`\r\n- `Max(x) FILTER\
          \ (WHERE y > 12) as ABC` (max of a field, if another field lets it qualify,\
          \ with a nice column name)\r\n- `count(*)` (count the rows for the given\
          \ group, that would produce a rather ugly column name, but it works)\r\n\
          - `count(distinct x) as numOfXs`\r\nIf there was an illegal character in\
          \ a field you are selecting from, you are responsible for bracketing it\
          \ with [ ]. \r\ne.g.\r\n- `some_field, count(*) as a, max(x) as b, min([column\
          \ with space in name]) as nice_name`\r\n where you would likely want to\
          \ pass `1` as the `groupBy` also."
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: "Groups by the specified fields.\r\n A comma delimited list of:\
          \ 1 based numeric indexes (cleaner), or repeats of the select expressions\
          \ (a bit verbose and must match exactly).\r\n e.g. `2,3`, `myColumn`.\r\n\
          \ Default is null (meaning no grouping will be performed on the selected\
          \ columns).\r\n This applies only over the result set being requested here,\
          \ meaning indexes into the \"select\" parameter fields.\r\n Only specify\
          \ this if you are selecting aggregations in the \"select\" parameter."
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "FetchQueryResultParquet: Fetches the result from a previously started\
        \ query, in Parquet format."
      tags:
      - Sql Background Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/SqlBackground/{executionId}/pipe:
    get:
      description: |-
        Fetch the data in various formats (if available, or if not simply being informed it is not yet ready)
        The following error codes are to be anticipated most with standard Problem Detail reports:
        - 400 BadRequest : Something failed with the execution of your query
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't (yet) exist.
        - 429 Too Many Requests : Please try your request again soon
         1. The query has been executed successfully in the past yet the server-instance receiving this request (e.g. from a load balancer) doesn't yet have this data available.
         1. By virtue of the request you have just placed this will have started to load from the persisted cache and will soon be available.
         1. It is also the case that the original server-instance to process the original query is likely to already be able to service this request.
      operationId: FetchQueryResultPipe
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: Makes this a file-download request (as opposed to returning the
          data in the response-body)
        explode: true
        in: query
        name: download
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      - description: "Order the results by these fields.\r\n Use the `-` sign to denote\
          \ descending order, e.g. `-MyFieldName`. Numeric indexes may be used also,\
          \ e.g. `2,-3`.\r\n Multiple fields can be denoted by a comma e.g. `-MyFieldName,AnotherFieldName,-AFurtherFieldName`.\r\
          \n Default is null, the sort order specified in the query itself."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          maxLength: 16384
          minLength: 1
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: An ODATA filter per Finbourne.Filtering syntax.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: "Default is null (meaning return all columns in the original\
          \ query itself).\r\nThe values are in terms of the result column name from\
          \ the original data set and are comma delimited.\r\nThe power of this comes\
          \ in that you may aggregate the data if you wish\r\n(that is the main reason\
          \ for allowing this, in fact).\r\ne.g.:\r\n- `MyField`\r\n- `Max(x) FILTER\
          \ (WHERE y > 12) as ABC` (max of a field, if another field lets it qualify,\
          \ with a nice column name)\r\n- `count(*)` (count the rows for the given\
          \ group, that would produce a rather ugly column name, but it works)\r\n\
          - `count(distinct x) as numOfXs`\r\nIf there was an illegal character in\
          \ a field you are selecting from, you are responsible for bracketing it\
          \ with [ ]. \r\ne.g.\r\n- `some_field, count(*) as a, max(x) as b, min([column\
          \ with space in name]) as nice_name`\r\n where you would likely want to\
          \ pass `1` as the `groupBy` also."
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: "Groups by the specified fields.\r\n A comma delimited list of:\
          \ 1 based numeric indexes (cleaner), or repeats of the select expressions\
          \ (a bit verbose and must match exactly).\r\n e.g. `2,3`, `myColumn`.\r\n\
          \ Default is null (meaning no grouping will be performed on the selected\
          \ columns).\r\n This applies only over the result set being requested here,\
          \ meaning indexes into the \"select\" parameter fields.\r\n Only specify\
          \ this if you are selecting aggregations in the \"select\" parameter."
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      - description: "When paginating, only return this number of records, page should\
          \ also be specified."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "0-N based on chunk sized determined by the limit, ignored if\
          \ limit < 1."
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "FetchQueryResultPipe: Fetches the result from a previously started\
        \ query, in pipe-delimited format."
      tags:
      - Sql Background Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/SqlBackground/{executionId}/sqlite:
    get:
      description: |-
        Fetch the data in various formats (if available, or if not simply being informed it is not yet ready)
        The following error codes are to be anticipated most with standard Problem Detail reports:
        - 400 BadRequest : Something failed with the execution of your query
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't (yet) exist.
        - 429 Too Many Requests : Please try your request again soon
         1. The query has been executed successfully in the past yet the server-instance receiving this request (e.g. from a load balancer) doesn't yet have this data available.
         1. By virtue of the request you have just placed this will have started to load from the persisted cache and will soon be available.
         1. It is also the case that the original server-instance to process the original query is likely to already be able to service this request.
      operationId: FetchQueryResultSqlite
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: "Order the results by these fields.\r\n Use the `-` sign to denote\
          \ descending order, e.g. `-MyFieldName`. Numeric indexes may be used also,\
          \ e.g. `2,-3`.\r\n Multiple fields can be denoted by a comma e.g. `-MyFieldName,AnotherFieldName,-AFurtherFieldName`.\r\
          \n Default is null, the sort order specified in the query itself."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          maxLength: 16384
          minLength: 1
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: An ODATA filter per Finbourne.Filtering syntax.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: "Default is null (meaning return all columns in the original\
          \ query itself).\r\nThe values are in terms of the result column name from\
          \ the original data set and are comma delimited.\r\nThe power of this comes\
          \ in that you may aggregate the data if you wish\r\n(that is the main reason\
          \ for allowing this, in fact).\r\ne.g.:\r\n- `MyField`\r\n- `Max(x) FILTER\
          \ (WHERE y > 12) as ABC` (max of a field, if another field lets it qualify,\
          \ with a nice column name)\r\n- `count(*)` (count the rows for the given\
          \ group, that would produce a rather ugly column name, but it works)\r\n\
          - `count(distinct x) as numOfXs`\r\nIf there was an illegal character in\
          \ a field you are selecting from, you are responsible for bracketing it\
          \ with [ ]. \r\ne.g.\r\n- `some_field, count(*) as a, max(x) as b, min([column\
          \ with space in name]) as nice_name`\r\n where you would likely want to\
          \ pass `1` as the `groupBy` also."
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: "Groups by the specified fields.\r\n A comma delimited list of:\
          \ 1 based numeric indexes (cleaner), or repeats of the select expressions\
          \ (a bit verbose and must match exactly).\r\n e.g. `2,3`, `myColumn`.\r\n\
          \ Default is null (meaning no grouping will be performed on the selected\
          \ columns).\r\n This applies only over the result set being requested here,\
          \ meaning indexes into the \"select\" parameter fields.\r\n Only specify\
          \ this if you are selecting aggregations in the \"select\" parameter."
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "FetchQueryResultSqlite: Fetches the result from a previously started\
        \ query, in SqLite format."
      tags:
      - Sql Background Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
  /api/SqlBackground/{executionId}/xml:
    get:
      description: |-
        Fetch the data in various formats (if available, or if not simply being informed it is not yet ready)
        The following error codes are to be anticipated most with standard Problem Detail reports:
        - 400 BadRequest : Something failed with the execution of your query
        - 401 Unauthorized
        - 404 Not Found : The requested query result doesn't (yet) exist.
        - 429 Too Many Requests : Please try your request again soon
         1. The query has been executed successfully in the past yet the server-instance receiving this request (e.g. from a load balancer) doesn't yet have this data available.
         1. By virtue of the request you have just placed this will have started to load from the persisted cache and will soon be available.
         1. It is also the case that the original server-instance to process the original query is likely to already be able to service this request.
      operationId: FetchQueryResultXml
      parameters:
      - description: ExecutionId returned when starting the query
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: Makes this a file-download request (as opposed to returning the
          data in the response-body)
        explode: true
        in: query
        name: download
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-nullable: true
      - description: "Order the results by these fields.\r\n Use the `-` sign to denote\
          \ descending order, e.g. `-MyFieldName`. Numeric indexes may be used also,\
          \ e.g. `2,-3`.\r\n Multiple fields can be denoted by a comma e.g. `-MyFieldName,AnotherFieldName,-AFurtherFieldName`.\r\
          \n Default is null, the sort order specified in the query itself."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          maxLength: 16384
          minLength: 1
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: An ODATA filter per Finbourne.Filtering syntax.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: "Default is null (meaning return all columns in the original\
          \ query itself).\r\nThe values are in terms of the result column name from\
          \ the original data set and are comma delimited.\r\nThe power of this comes\
          \ in that you may aggregate the data if you wish\r\n(that is the main reason\
          \ for allowing this, in fact).\r\ne.g.:\r\n- `MyField`\r\n- `Max(x) FILTER\
          \ (WHERE y > 12) as ABC` (max of a field, if another field lets it qualify,\
          \ with a nice column name)\r\n- `count(*)` (count the rows for the given\
          \ group, that would produce a rather ugly column name, but it works)\r\n\
          - `count(distinct x) as numOfXs`\r\nIf there was an illegal character in\
          \ a field you are selecting from, you are responsible for bracketing it\
          \ with [ ]. \r\ne.g.\r\n- `some_field, count(*) as a, max(x) as b, min([column\
          \ with space in name]) as nice_name`\r\n where you would likely want to\
          \ pass `1` as the `groupBy` also."
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: "Groups by the specified fields.\r\n A comma delimited list of:\
          \ 1 based numeric indexes (cleaner), or repeats of the select expressions\
          \ (a bit verbose and must match exactly).\r\n e.g. `2,3`, `myColumn`.\r\n\
          \ Default is null (meaning no grouping will be performed on the selected\
          \ columns).\r\n This applies only over the result set being requested here,\
          \ meaning indexes into the \"select\" parameter fields.\r\n Only specify\
          \ this if you are selecting aggregations in the \"select\" parameter."
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      - description: "When paginating, only return this number of records, page should\
          \ also be specified."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "0-N based on chunk sized determined by the limit, ignored if\
          \ limit < 1."
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Bad Request
      security:
      - oauth2: []
      summary: "FetchQueryResultXml: Fetches the result from a previously started\
        \ query, in Xml format."
      tags:
      - Sql Background Execution
      x-fbn-apistatus: Stable
      x-accepts: application/json
components:
  schemas:
    AccessControlledAction:
      additionalProperties: false
      example:
        limitedSet:
        - identifier:
            key: identifier
          name: name
          description: description
          actions:
          - activity: activity
            scope: scope
            entity: entity
          - activity: activity
            scope: scope
            entity: entity
        - identifier:
            key: identifier
          name: name
          description: description
          actions:
          - activity: activity
            scope: scope
            entity: entity
          - activity: activity
            scope: scope
            entity: entity
        description: description
        action:
          activity: activity
          scope: scope
          entity: entity
      properties:
        description:
          nullable: true
          type: string
        action:
          $ref: '#/components/schemas/ActionId'
        limitedSet:
          items:
            $ref: '#/components/schemas/IdSelectorDefinition'
          nullable: true
          type: array
      type: object
    AccessControlledResource:
      additionalProperties: false
      example:
        application: application
        name: name
        description: description
        actions:
        - limitedSet:
          - identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          - identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          description: description
          action:
            activity: activity
            scope: scope
            entity: entity
        - limitedSet:
          - identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          - identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          description: description
          action:
            activity: activity
            scope: scope
            entity: entity
        identifierParts:
        - valuesPath: valuesPath
          displayName: displayName
          name: name
          index: 0
          description: description
          typeId: ""
          required: true
        - valuesPath: valuesPath
          displayName: displayName
          name: name
          index: 0
          description: description
          typeId: ""
          required: true
      properties:
        application:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        actions:
          items:
            $ref: '#/components/schemas/AccessControlledAction'
          nullable: true
          type: array
        identifierParts:
          items:
            $ref: '#/components/schemas/AccessControlledResourceIdentifierPartSchemaAttribute'
          nullable: true
          type: array
      type: object
    AccessControlledResourceIdentifierPartSchemaAttribute:
      additionalProperties: false
      example:
        valuesPath: valuesPath
        displayName: displayName
        name: name
        index: 0
        description: description
        typeId: ""
        required: true
      properties:
        index:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        required:
          type: boolean
        valuesPath:
          nullable: true
          type: string
        typeId:
          nullable: true
          readOnly: true
      type: object
    ActionId:
      additionalProperties: false
      example:
        activity: activity
        scope: scope
        entity: entity
      properties:
        scope:
          maxLength: 100
          minLength: 3
          type: string
        activity:
          maxLength: 25
          minLength: 3
          type: string
        entity:
          maxLength: 25
          minLength: 3
          type: string
      required:
      - activity
      - entity
      - scope
      type: object
    AggregateFunction:
      description: Aggregation function type
      enum:
      - count
      - count_distinct
      - sum
      - total
      - avg
      - min
      - max
      - group_concat
      type: string
    Aggregation:
      additionalProperties: false
      description: How to aggregate over a field
      example:
        alias: alias
        type: null
      properties:
        type:
          $ref: '#/components/schemas/AggregateFunction'
        alias:
          description: "Alias, if any, for the Aggregate expression when selected"
          maxLength: 256
          minLength: 0
          nullable: true
          type: string
      required:
      - type
      type: object
    AutoDetectType:
      description: The method of name/type column inference being used
      enum:
      - Auto
      - SpecifyColumnsYetInferTypes
      - SpecifyColumnsAndTypes
      type: string
    AvailableField:
      additionalProperties: false
      description: "Information about a field that can be designed on (regardless\
        \ if it currently is)\r\nKind of a \"mini-available catalog entry\""
      example:
        isMain: true
        dataType: null
        name: name
        isPrimaryKey: true
        fieldType: null
      properties:
        name:
          description: Name of the Field
          maxLength: 256
          minLength: 0
          type: string
        dataType:
          $ref: '#/components/schemas/DataType'
        fieldType:
          $ref: '#/components/schemas/FieldType'
        isMain:
          description: Is this a Main Field within the Provider
          nullable: true
          type: boolean
        isPrimaryKey:
          description: Is this a member of the PrimaryKey of the Provider
          nullable: true
          type: boolean
      required:
      - fieldType
      - name
      type: object
    BackgroundMultiQueryProgressResponse:
      additionalProperties: false
      example:
        feedback:
        - executionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          level: null
          sender: sender
          stateId: 6
          propertyValues:
          - ""
          - ""
          sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          message: message
          when: 2000-01-23T04:56:07.000+00:00
          messageTemplate: messageTemplate
        - executionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          level: null
          sender: sender
          stateId: 6
          propertyValues:
          - ""
          - ""
          sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          message: message
          when: 2000-01-23T04:56:07.000+00:00
          messageTemplate: messageTemplate
        progress: progress
        queries:
        - feedback:
          - executionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            level: null
            sender: sender
            stateId: 6
            propertyValues:
            - ""
            - ""
            sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            message: message
            when: 2000-01-23T04:56:07.000+00:00
            messageTemplate: messageTemplate
          - executionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            level: null
            sender: sender
            stateId: 6
            propertyValues:
            - ""
            - ""
            sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            message: message
            when: 2000-01-23T04:56:07.000+00:00
            messageTemplate: messageTemplate
          columnsAvailable:
          - allowedValues: allowedValues
            sampleValues: sampleValues
            isMain: true
            isRequiredByProvider: true
            displayName: displayName
            name: name
            description: description
            isPrimaryKey: true
            clientIds:
            - clientIds
            - clientIds
            type: null
            mandatoryForActions: mandatoryForActions
            conditionUsage: null
          - allowedValues: allowedValues
            sampleValues: sampleValues
            isMain: true
            isRequiredByProvider: true
            displayName: displayName
            name: name
            description: description
            isPrimaryKey: true
            clientIds:
            - clientIds
            - clientIds
            type: null
            mandatoryForActions: mandatoryForActions
            conditionUsage: null
          hasData: true
          query: query
          progress: progress
          queryName: queryName
          rowCount: 0
          state: null
          status: null
        - feedback:
          - executionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            level: null
            sender: sender
            stateId: 6
            propertyValues:
            - ""
            - ""
            sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            message: message
            when: 2000-01-23T04:56:07.000+00:00
            messageTemplate: messageTemplate
          - executionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            level: null
            sender: sender
            stateId: 6
            propertyValues:
            - ""
            - ""
            sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            message: message
            when: 2000-01-23T04:56:07.000+00:00
            messageTemplate: messageTemplate
          columnsAvailable:
          - allowedValues: allowedValues
            sampleValues: sampleValues
            isMain: true
            isRequiredByProvider: true
            displayName: displayName
            name: name
            description: description
            isPrimaryKey: true
            clientIds:
            - clientIds
            - clientIds
            type: null
            mandatoryForActions: mandatoryForActions
            conditionUsage: null
          - allowedValues: allowedValues
            sampleValues: sampleValues
            isMain: true
            isRequiredByProvider: true
            displayName: displayName
            name: name
            description: description
            isPrimaryKey: true
            clientIds:
            - clientIds
            - clientIds
            type: null
            mandatoryForActions: mandatoryForActions
            conditionUsage: null
          hasData: true
          query: query
          progress: progress
          queryName: queryName
          rowCount: 0
          state: null
          status: null
        status: null
      properties:
        progress:
          description: The full progress log (up to this point at least)
          nullable: true
          type: string
        feedback:
          description: Individual Feedback Messages (to replace Progress). A given
            message will be returned from only one call.
          items:
            $ref: '#/components/schemas/FeedbackEventArgs'
          nullable: true
          type: array
        status:
          $ref: '#/components/schemas/TaskStatus'
        queries:
          items:
            $ref: '#/components/schemas/BackgroundQueryProgressResponse'
          nullable: true
          type: array
      type: object
    BackgroundMultiQueryResponse:
      additionalProperties: false
      example:
        cancel:
          method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        histogram:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        executionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        fetchSqlite:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        fetchParquet:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        fetchPipe:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        fetchJson:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        progress:
          method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        fetchJsonProper:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        fetchExcel:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        fetchXml:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        fetchCsv:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
      properties:
        executionId:
          format: uuid
          readOnly: true
          type: string
        progress:
          $ref: '#/components/schemas/Link'
        cancel:
          $ref: '#/components/schemas/Link'
        fetchJson:
          description: Json (as a string) data request links for all of the child
            queries
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          readOnly: true
          type: array
        fetchJsonProper:
          description: Json-proper data request links for all of the child queries
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          readOnly: true
          type: array
        fetchXml:
          description: Xml data request links for all of the child queries
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          readOnly: true
          type: array
        fetchParquet:
          description: Parquet data request links for all of the child queries
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          readOnly: true
          type: array
        fetchCsv:
          description: CSV data request links for all of the child queries
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          readOnly: true
          type: array
        fetchPipe:
          description: Pipe delimited data request links for all of the child queries
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          readOnly: true
          type: array
        fetchExcel:
          description: Excel workbook data request links for all of the child queries
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          readOnly: true
          type: array
        fetchSqlite:
          description: SqLite DB data request links for all of the child queries
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          readOnly: true
          type: array
        histogram:
          description: Histogram links for all of the child queries
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          readOnly: true
          type: array
      type: object
    BackgroundQueryCancelResponse:
      additionalProperties: false
      example:
        progress: progress
        hadData: true
        previousStatus: null
        previousState: null
      properties:
        hadData:
          type: boolean
        previousStatus:
          $ref: '#/components/schemas/TaskStatus'
        previousState:
          $ref: '#/components/schemas/BackgroundQueryState'
        progress:
          nullable: true
          type: string
      type: object
    BackgroundQueryProgressResponse:
      additionalProperties: false
      example:
        feedback:
        - executionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          level: null
          sender: sender
          stateId: 6
          propertyValues:
          - ""
          - ""
          sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          message: message
          when: 2000-01-23T04:56:07.000+00:00
          messageTemplate: messageTemplate
        - executionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          level: null
          sender: sender
          stateId: 6
          propertyValues:
          - ""
          - ""
          sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          message: message
          when: 2000-01-23T04:56:07.000+00:00
          messageTemplate: messageTemplate
        columnsAvailable:
        - allowedValues: allowedValues
          sampleValues: sampleValues
          isMain: true
          isRequiredByProvider: true
          displayName: displayName
          name: name
          description: description
          isPrimaryKey: true
          clientIds:
          - clientIds
          - clientIds
          type: null
          mandatoryForActions: mandatoryForActions
          conditionUsage: null
        - allowedValues: allowedValues
          sampleValues: sampleValues
          isMain: true
          isRequiredByProvider: true
          displayName: displayName
          name: name
          description: description
          isPrimaryKey: true
          clientIds:
          - clientIds
          - clientIds
          type: null
          mandatoryForActions: mandatoryForActions
          conditionUsage: null
        hasData: true
        query: query
        progress: progress
        queryName: queryName
        rowCount: 0
        state: null
        status: null
      properties:
        hasData:
          description: Is there currently data for this Query?
          type: boolean
        rowCount:
          description: Number of rows of data held. -1 if none as yet.
          format: int32
          type: integer
        status:
          $ref: '#/components/schemas/TaskStatus'
        state:
          $ref: '#/components/schemas/BackgroundQueryState'
        progress:
          description: The full progress log (up to this point at least)
          nullable: true
          type: string
        feedback:
          description: Individual Feedback Messages (to replace Progress). A given
            message will be returned from only one call.
          items:
            $ref: '#/components/schemas/FeedbackEventArgs'
          nullable: true
          type: array
        query:
          description: The LuminesceSql of the original request
          nullable: true
          type: string
        queryName:
          description: The QueryName given in the original request
          nullable: true
          type: string
        columnsAvailable:
          description: When HasData is true this is the schema of columns that will
            be returned if the data is requested
          items:
            $ref: '#/components/schemas/Column'
          nullable: true
          type: array
      type: object
    BackgroundQueryResponse:
      additionalProperties: false
      description: Response for Background Query Start requests
      example:
        cancel:
          method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        histogram:
          method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        executionId: executionId
        fetchSqlite:
          method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        fetchParquet:
          method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        fetchPipe:
          method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        fetchJson:
          method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        progress:
          method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        fetchJsonProper:
          method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        fetchExcel:
          method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        fetchXml:
          method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        fetchCsv:
          method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
      properties:
        executionId:
          description: ExecutionId of the started-query
          nullable: true
          type: string
        progress:
          $ref: '#/components/schemas/Link'
        cancel:
          $ref: '#/components/schemas/Link'
        fetchJson:
          $ref: '#/components/schemas/Link'
        fetchJsonProper:
          $ref: '#/components/schemas/Link'
        fetchXml:
          $ref: '#/components/schemas/Link'
        fetchParquet:
          $ref: '#/components/schemas/Link'
        fetchCsv:
          $ref: '#/components/schemas/Link'
        fetchPipe:
          $ref: '#/components/schemas/Link'
        fetchExcel:
          $ref: '#/components/schemas/Link'
        fetchSqlite:
          $ref: '#/components/schemas/Link'
        histogram:
          $ref: '#/components/schemas/Link'
      type: object
    BackgroundQueryState:
      enum:
      - New
      - Running
      - Errored
      - Cancelled
      - Executed
      - ExecutedNoSerializationRequired
      - Serialized
      - SerializationFailed
      - AttemptingToDeserialize
      - Loaded
      - Cleared
      - Disposed
      type: string
    CertificateAction:
      description: The action to take with a certificate
      enum:
      - Create
      - CreateAndAllowMultipleWhichAreValid
      - Renew
      - Revoke
      type: string
    CertificateFileType:
      description: The type of the certificate file to be downloaded (both public
        and private are needed to connect)
      enum:
      - Public
      - Private
      type: string
    CertificateState:
      additionalProperties: false
      description: "Information held about the minting / revoking of a certificate.\r\
        \nIt does *not* contain the certificate itself"
      example:
        commonName: commonName
        serialNumber: serialNumber
        creationStatus: null
        validityEnd: 2000-01-23T04:56:07.000+00:00
        validityStart: 2000-01-23T04:56:07.000+00:00
        type: null
        version: 0
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        revocationStatus: null
        revokedBy: revokedBy
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        revokedAt: 2000-01-23T04:56:07.000+00:00
        key: key
      properties:
        key:
          description: "The \"key\" to which this belongs in the dictionary,\r\nbasically\
            \ the CN without any version information"
          nullable: true
          type: string
        version:
          description: The version of this certificate
          format: int32
          type: integer
        commonName:
          description: The common Name of the Certificate
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/CertificateType'
        creationStatus:
          $ref: '#/components/schemas/CertificateStatus'
        revocationStatus:
          $ref: '#/components/schemas/CertificateStatus'
        validityStart:
          description: The earliest point at which a certificate can be used
          format: date-time
          nullable: true
          type: string
        validityEnd:
          description: The latest point at which a certificate can be used
          format: date-time
          nullable: true
          type: string
        revokedAt:
          description: "The point at which this was revoked, if any"
          format: date-time
          nullable: true
          type: string
        revokedBy:
          description: "The user which revoked this, if any"
          nullable: true
          type: string
        createdAt:
          description: The point at which this was created
          format: date-time
          nullable: true
          type: string
        createdBy:
          description: The user which created this
          nullable: true
          type: string
        serialNumber:
          description: "The Vault-issued serial number of the certificate, if any\
            \ - used for revocation"
          nullable: true
          type: string
        links:
          description: The location within Configuration Store that this is saved
            to
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      type: object
    CertificateStatus:
      description: Which System(s) have been updated with a given request
      enum:
      - None
      - WebApiPersistence
      - Vault
      - Rabbit
      - ConfigStore
      - AllSystems
      type: string
    CertificateType:
      description: The sort of certificate being Created / Revoked / Renewed
      enum:
      - Domain
      - User
      type: string
    Column:
      additionalProperties: false
      example:
        allowedValues: allowedValues
        sampleValues: sampleValues
        isMain: true
        isRequiredByProvider: true
        displayName: displayName
        name: name
        description: description
        isPrimaryKey: true
        clientIds:
        - clientIds
        - clientIds
        type: null
        mandatoryForActions: mandatoryForActions
        conditionUsage: null
      properties:
        isPrimaryKey:
          type: boolean
        isMain:
          type: boolean
        isRequiredByProvider:
          type: boolean
        mandatoryForActions:
          nullable: true
          type: string
        clientIds:
          items:
            type: string
          nullable: true
          type: array
        name:
          nullable: true
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/DataType'
        description:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        conditionUsage:
          $ref: '#/components/schemas/ConditionAttributes'
        sampleValues:
          nullable: true
          type: string
        allowedValues:
          nullable: true
          type: string
      type: object
    ColumnInfo:
      additionalProperties: false
      description: Information on how to construct a file-read sql query
      example:
        select: true
        name: name
        type: null
        xPath: xPath
      properties:
        select:
          description: Should the column be used/selected?
          type: boolean
        type:
          $ref: '#/components/schemas/DataType'
        name:
          description: The name of the column
          maxLength: 256
          minLength: 0
          nullable: true
          type: string
        xPath:
          description: Xpath for the column (only applicable to XML defined columns)
          maxLength: 256
          minLength: 0
          nullable: true
          type: string
      type: object
    ConditionAttributes:
      enum:
      - None
      - Normal
      - Required
      - Main
      type: string
    ConvertToViewData:
      additionalProperties: false
      description: Representation of view data where will template the data into a
        'create view' sql
      example:
        query: query
        name: name
        viewParameters:
        - dataType: null
          name: name
          description: description
          isTableDataMandatory: true
          value: value
        - dataType: null
          name: name
          description: description
          isTableDataMandatory: true
          value: value
        description: description
        documentationLink: documentationLink
        startingVariableName: startingVariableName
        otherParameters:
          key: otherParameters
      properties:
        query:
          description: view query
          minLength: 1
          type: string
        name:
          description: Name of view
          maxLength: 256
          minLength: 0
          type: string
        description:
          description: Description of view
          maxLength: 256
          minLength: 0
          nullable: true
          type: string
        documentationLink:
          description: Documentation link
          maxLength: 256
          minLength: 0
          nullable: true
          type: string
        viewParameters:
          description: View parameters
          items:
            $ref: '#/components/schemas/ViewParameter'
          nullable: true
          type: array
        otherParameters:
          additionalProperties:
            nullable: true
            type: string
          description: "Other parameters not explicitly handled by the ConvertToView\
            \ generation.\r\nThese will be populated by the \"From SQL\" and should\
            \ simply be returned by\r\nthe web GUI should the user edit / update /\
            \ regenerate"
          nullable: true
          type: object
        startingVariableName:
          description: "Which variable the this start with, null if not started from\
            \ a full Create View Sql Statement."
          nullable: true
          type: string
      required:
      - name
      - query
      type: object
    DataType:
      enum:
      - Boolean
      - Date
      - DateTime
      - Decimal
      - Double
      - Int
      - BigInt
      - Text
      - Table
      type: string
    FeedbackEventArgs:
      additionalProperties: false
      example:
        executionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        level: null
        sender: sender
        stateId: 6
        propertyValues:
        - ""
        - ""
        sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        message: message
        when: 2000-01-23T04:56:07.000+00:00
        messageTemplate: messageTemplate
      properties:
        when:
          format: date-time
          type: string
        sessionId:
          format: uuid
          type: string
        executionId:
          format: uuid
          type: string
        level:
          $ref: '#/components/schemas/FeedbackLevel'
        sender:
          nullable: true
          type: string
        stateId:
          format: int32
          nullable: true
          type: integer
        messageTemplate:
          nullable: true
          type: string
        propertyValues:
          items: {}
          nullable: true
          type: array
        message:
          nullable: true
          readOnly: true
          type: string
      type: object
    FeedbackLevel:
      enum:
      - None
      - Progress
      - Debug
      - Information
      - Warning
      - Error
      - ProgressAndError
      - ProgressAndWarning
      - ProgressAndInformation
      - ProgressAndDebug
      - ExecutionKeepAlive
      type: string
    FieldDesign:
      additionalProperties: false
      description: Treatment of a single field within a QueryDesign
      example:
        dataType: null
        name: name
        alias: alias
        shouldSelect: true
        filters:
        - value: value
          operator: null
        - value: value
          operator: null
        aggregations:
        - alias: alias
          type: null
        - alias: alias
          type: null
      properties:
        name:
          description: Name of the Field
          maxLength: 256
          minLength: 0
          type: string
        alias:
          description: Alias if any (if none the Name is used)
          maxLength: 256
          minLength: 0
          nullable: true
          type: string
        dataType:
          $ref: '#/components/schemas/DataType'
        shouldSelect:
          description: "Should this be selected? False would imply it is only being\
            \ filtered on.\r\nIgnored when Aggregations are present"
          type: boolean
        filters:
          description: Filter clauses to apply to this field (And'ed together)
          items:
            $ref: '#/components/schemas/FilterTermDesign'
          nullable: true
          type: array
        aggregations:
          description: Aggregations to apply (as opposed to simply selecting)
          items:
            $ref: '#/components/schemas/Aggregation'
          nullable: true
          type: array
      required:
      - name
      type: object
    FieldType:
      enum:
      - Column
      - Parameter
      type: string
    FileReaderBuilderDef:
      additionalProperties: false
      description: Information on how to construct a file-read sql query
      example:
        variableName: variableName
        columns:
        - select: true
          name: name
          type: null
          xPath: xPath
        - select: true
          name: name
          type: null
          xPath: xPath
        zipFilter: zipFilter
        filePath: filePath
        csv:
          noHeader: true
          inferTypeRowCount: 6
          quote: quote
          skipPreHeader: 1
          skipInvalidRows: true
          columnNames: columnNames
          columnTypes: columnTypes
          delimiter: delimiter
          columnNamesWanted: columnNamesWanted
          escape: escape
          valuesToMakeNull: valuesToMakeNull
          skipPostHeader: 5
        source:
          location: location
          type: null
        parquet:
          columnNamesWanted: columnNamesWanted
        excel:
          noHeader: true
          inferTypeRowCount: 5
          password: password
          columnNames: columnNames
          ignoreBlankRows: true
          columnTypes: columnTypes
          ignoreInvalidCells: true
          worksheet: worksheet
          calculate: true
          rangeOrTable: rangeOrTable
        folderFilter: folderFilter
        sqLite:
          table: table
        xml:
          inferTypeRowCount: 2
          columnNames: columnNames
          columnTypes: columnTypes
          nodePath: nodePath
          valuesToMakeNull: valuesToMakeNull
          namespaces: namespaces
        autoDetect: null
        limit: 0
        addFileName: true
        availableSources:
        - location: location
          type: null
        - location: location
          type: null
      properties:
        autoDetect:
          $ref: '#/components/schemas/AutoDetectType'
        columns:
          description: Column information for the results
          items:
            $ref: '#/components/schemas/ColumnInfo'
          nullable: true
          type: array
        limit:
          description: What limit be added to the load query? Less than or equal to
            zero means none
          format: int32
          type: integer
        source:
          $ref: '#/components/schemas/Source'
        availableSources:
          description: The source locations the user has access to. The provider in
            essence.
          items:
            $ref: '#/components/schemas/Source'
          nullable: true
          type: array
        variableName:
          description: The name of the variable for the `use` statement
          maxLength: 256
          minLength: 0
          nullable: true
          type: string
        filePath:
          description: The file (or folder) path
          maxLength: 256
          minLength: 0
          nullable: true
          type: string
        folderFilter:
          description: The filter to apply to a folder (all matching files then being
            read) a RegExp
          maxLength: 256
          minLength: 0
          nullable: true
          type: string
        zipFilter:
          description: The filter to apply to folder structures with zip archives
            (all matching files then being read) a RegExp
          maxLength: 256
          minLength: 0
          nullable: true
          type: string
        addFileName:
          description: Should a file name column be added to the output?
          type: boolean
        csv:
          $ref: '#/components/schemas/OptionsCsv'
        excel:
          $ref: '#/components/schemas/OptionsExcel'
        sqLite:
          $ref: '#/components/schemas/OptionsSqLite'
        xml:
          $ref: '#/components/schemas/OptionsXml'
        parquet:
          $ref: '#/components/schemas/OptionsParquet'
      type: object
    FilterTermDesign:
      additionalProperties: false
      description: A single filter clause
      example:
        value: value
        operator: null
      properties:
        operator:
          $ref: '#/components/schemas/QueryDesignerBinaryOperator'
        value:
          description: "The value to compare against (always as a string, but will\
            \ be formatted to the correct type)"
          maxLength: 2048
          minLength: 0
          type: string
      required:
      - operator
      - value
      type: object
    IdSelectorDefinition:
      additionalProperties: false
      example:
        identifier:
          key: identifier
        name: name
        description: description
        actions:
        - activity: activity
          scope: scope
          entity: entity
        - activity: activity
          scope: scope
          entity: entity
      properties:
        identifier:
          additionalProperties:
            type: string
          minLength: 1
          type: object
        actions:
          items:
            $ref: '#/components/schemas/ActionId'
          minItems: 1
          type: array
        name:
          maxLength: 100
          minLength: 0
          nullable: true
          type: string
        description:
          maxLength: 1024
          minLength: 0
          nullable: true
          type: string
      required:
      - actions
      - identifier
      type: object
    Link:
      additionalProperties: false
      example:
        method: method
        description: description
        href: https://openapi-generator.tech
        relation: relation
      properties:
        relation:
          type: string
        href:
          format: uri
          type: string
        description:
          nullable: true
          type: string
        method:
          type: string
      required:
      - href
      - method
      - relation
      type: object
    LusidProblemDetails:
      additionalProperties: false
      properties:
        name:
          minLength: 1
          type: string
        errorDetails:
          items:
            additionalProperties:
              type: string
            type: object
          nullable: true
          type: array
        code:
          format: int32
          type: integer
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      required:
      - code
      - name
      type: object
    MultiQueryDefinitionType:
      enum:
      - Instrument
      - Expiry
      - CorporateActions
      - EdiInstrument
      - EdiInstrumentWriter
      - Testing
      - MarketplaceClientLoadHistory
      - InsightsMetricsEntitlement
      - InstrumentDiscovery
      - InstrumentUpsert
      type: string
    OptionsCsv:
      additionalProperties: false
      description: Additional options applicable to the given SourceType
      example:
        noHeader: true
        inferTypeRowCount: 6
        quote: quote
        skipPreHeader: 1
        skipInvalidRows: true
        columnNames: columnNames
        columnTypes: columnTypes
        delimiter: delimiter
        columnNamesWanted: columnNamesWanted
        escape: escape
        valuesToMakeNull: valuesToMakeNull
        skipPostHeader: 5
      properties:
        columnNames:
          description: Column Names either overrides the header row or steps in when
            there is no header row (comma delimited list)
          nullable: true
          type: string
        columnNamesWanted:
          description: Column (by Name) that should be returned (comma delimited list)
          nullable: true
          type: string
        columnTypes:
          description: "Column types (comma delimited list of: '{types}', some columns\
            \ may be left blank while others are specified)"
          nullable: true
          type: string
        inferTypeRowCount:
          description: If non-zero and 'types' is not specified (or not specified
            for some columns) this will look through N rows to attempt to work out
            the column types for columns not pre-specified
          format: int32
          type: integer
        noHeader:
          description: Set this if there is no header row
          type: boolean
        delimiter:
          description: The delimiter between values (\t for tab)
          nullable: true
          type: string
        escape:
          description: Character used to escape the 'Quote' character when within
            a value
          nullable: true
          type: string
        quote:
          description: Character used around any field containing the 'delimiter'
            or a line break.
          nullable: true
          type: string
        valuesToMakeNull:
          description: Regex of values to map to 'null' in the returned data.
          nullable: true
          type: string
        skipPreHeader:
          description: Number of rows to ignore before the header row
          format: int32
          type: integer
        skipPostHeader:
          description: Number of rows to ignore after the header row
          format: int32
          type: integer
        skipInvalidRows:
          description: "Skip invalid data rows (totally invalid ones), \r\nThis also\
            \ allows for potentially wrong data if it can be handled somewhat e.g.\
            \ embedded quotes misused (and still returns such rows).\r\nIn either\
            \ case a warning will show in the progress feedback."
          type: boolean
      type: object
    OptionsExcel:
      additionalProperties: false
      description: Additional options applicable to the given SourceType
      example:
        noHeader: true
        inferTypeRowCount: 5
        password: password
        columnNames: columnNames
        ignoreBlankRows: true
        columnTypes: columnTypes
        ignoreInvalidCells: true
        worksheet: worksheet
        calculate: true
        rangeOrTable: rangeOrTable
      properties:
        columnNames:
          description: Column Names either overrides the header row or steps in when
            there is no header row (comma delimited list)
          nullable: true
          type: string
        columnTypes:
          description: "Column types (comma delimited list of: '{types}', some columns\
            \ may be left blank while others are specified)"
          nullable: true
          type: string
        inferTypeRowCount:
          description: If non-zero and 'types' is not specified (or not specified
            for some columns) this will look through N rows to attempt to work out
            the column types for columns not pre-specified
          format: int32
          type: integer
        noHeader:
          description: Set this if there is no header row
          type: boolean
        calculate:
          description: Whether to attempt a calculation of the imported cell range
            prior to import
          type: boolean
        password:
          description: If specified will be used as the password used for password
            protected workbooks
          nullable: true
          type: string
        worksheet:
          description: "The worksheet containing the cell range to import (name or\
            \ index, will default to first)"
          nullable: true
          type: string
        rangeOrTable:
          description: The cell range to import as either a specified range or a table
            name
          nullable: true
          type: string
        ignoreInvalidCells:
          description: If specified cells which can not be successfully converted
            to the target type will be ignored
          type: boolean
        ignoreBlankRows:
          description: If the entire rows has only blank cells it will be ignored
            will be ignored
          type: boolean
      type: object
    OptionsParquet:
      additionalProperties: false
      description: Additional options applicable to the given SourceType
      example:
        columnNamesWanted: columnNamesWanted
      properties:
        columnNamesWanted:
          description: Column (by Name) that should be returned (comma delimited list)
          nullable: true
          type: string
      type: object
    OptionsSqLite:
      additionalProperties: false
      description: Additional options applicable to the given SourceType
      example:
        table: table
      properties:
        table:
          description: Table name to read. If missing then an error will be raised
            if there is any number of tables other than one.
          nullable: true
          type: string
      type: object
    OptionsXml:
      additionalProperties: false
      description: Additional options applicable to the given SourceType
      example:
        inferTypeRowCount: 2
        columnNames: columnNames
        columnTypes: columnTypes
        nodePath: nodePath
        valuesToMakeNull: valuesToMakeNull
        namespaces: namespaces
      properties:
        columnTypes:
          description: "Column types (comma delimited list of: '{types}', some columns\
            \ may be left blank while others are specified)"
          nullable: true
          type: string
        inferTypeRowCount:
          description: If non-zero and 'types' is not specified (or not specified
            for some columns) this will look through N rows to attempt to work out
            the column types for columns not pre-specified
          format: int32
          type: integer
        valuesToMakeNull:
          description: Regex of values to map to 'null' in the returned data.
          nullable: true
          type: string
        columnNames:
          description: Column Names either overrides the header row or steps in when
            there is no header row (comma delimited list)
          nullable: true
          type: string
        nodePath:
          description: XPath query that selects the nodes to map to rows
          nullable: true
          type: string
        namespaces:
          description: "Selected prefix(es) and namespace(s):prefix1=namespace1-uri1,prefix2=namespace2-uri2,...prefixN=namespaceN-uriN"
          nullable: true
          type: string
      type: object
    OrderByDirection:
      description: Direction of Order By terms in the Order By clause
      enum:
      - asc
      - desc
      type: string
    OrderByTermDesign:
      additionalProperties: false
      description: A single clause within an Order BY
      example:
        field: field
        direction: null
      properties:
        field:
          description: Name of the field to order by
          maxLength: 256
          minLength: 0
          type: string
        direction:
          $ref: '#/components/schemas/OrderByDirection'
      required:
      - field
      type: object
    QueryDesign:
      additionalProperties: false
      description: Representation of a "designable Query" suitable for formatting
        to SQL or being built from compliant SQL.
      example:
        availableFields:
        - isMain: true
          dataType: null
          name: name
          isPrimaryKey: true
          fieldType: null
        - isMain: true
          dataType: null
          name: name
          isPrimaryKey: true
          fieldType: null
        warnings:
        - warnings
        - warnings
        limit: 0
        alias: alias
        orderBy:
        - field: field
          direction: null
        - field: field
          direction: null
        fields:
        - dataType: null
          name: name
          alias: alias
          shouldSelect: true
          filters:
          - value: value
            operator: null
          - value: value
            operator: null
          aggregations:
          - alias: alias
            type: null
          - alias: alias
            type: null
        - dataType: null
          name: name
          alias: alias
          shouldSelect: true
          filters:
          - value: value
            operator: null
          - value: value
            operator: null
          aggregations:
          - alias: alias
            type: null
          - alias: alias
            type: null
        tableName: tableName
      properties:
        tableName:
          description: Name of the table being designed
          maxLength: 256
          minLength: 0
          type: string
        alias:
          description: "Alias for the table in the generated SQL, if any"
          maxLength: 256
          minLength: 0
          nullable: true
          type: string
        fields:
          description: "Fields to be selected, aggregated over and/or filtered on"
          items:
            $ref: '#/components/schemas/FieldDesign'
          type: array
        orderBy:
          description: Order By clauses to apply
          items:
            $ref: '#/components/schemas/OrderByTermDesign'
          nullable: true
          type: array
        limit:
          description: "Row limit to apply, if any"
          format: int32
          nullable: true
          type: integer
        warnings:
          description: Any warnings to show the user when converting from SQL to this
            representation
          items:
            type: string
          nullable: true
          type: array
        availableFields:
          description: Fields that are known to be available for design when parsing
            SQL
          items:
            $ref: '#/components/schemas/AvailableField'
          nullable: true
          type: array
      required:
      - fields
      - tableName
      type: object
    QueryDesignerBinaryOperator:
      enum:
      - Lt
      - Lte
      - Gt
      - Gte
      - Eq
      - Neq
      - Like
      - Contains
      - StartsWith
      - EndsWith
      type: string
    ResourceListOfAccessControlledResource:
      additionalProperties: false
      example:
        previousPage: previousPage
        nextPage: nextPage
        values:
        - application: application
          name: name
          description: description
          actions:
          - limitedSet:
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            description: description
            action:
              activity: activity
              scope: scope
              entity: entity
          - limitedSet:
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            description: description
            action:
              activity: activity
              scope: scope
              entity: entity
          identifierParts:
          - valuesPath: valuesPath
            displayName: displayName
            name: name
            index: 0
            description: description
            typeId: ""
            required: true
          - valuesPath: valuesPath
            displayName: displayName
            name: name
            index: 0
            description: description
            typeId: ""
            required: true
        - application: application
          name: name
          description: description
          actions:
          - limitedSet:
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            description: description
            action:
              activity: activity
              scope: scope
              entity: entity
          - limitedSet:
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            description: description
            action:
              activity: activity
              scope: scope
              entity: entity
          identifierParts:
          - valuesPath: valuesPath
            displayName: displayName
            name: name
            index: 0
            description: description
            typeId: ""
            required: true
          - valuesPath: valuesPath
            displayName: displayName
            name: name
            index: 0
            description: description
            typeId: ""
            required: true
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        href: https://openapi-generator.tech
      properties:
        values:
          items:
            $ref: '#/components/schemas/AccessControlledResource'
          type: array
        href:
          format: uri
          nullable: true
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
        nextPage:
          nullable: true
          type: string
        previousPage:
          nullable: true
          type: string
      required:
      - values
      type: object
    Source:
      additionalProperties: false
      description: Information leading to choosing the provider
      example:
        location: location
        type: null
      properties:
        location:
          description: "The source location. Start of a provider name, `Drive`, `LocalFs`,\
            \ `AwsS3` etc."
          maxLength: 256
          minLength: 0
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/SourceType'
      type: object
    SourceType:
      description: The file type of a source
      enum:
      - Unknown
      - Csv
      - Excel
      - SqLite
      - Xml
      - Parquet
      - RawText
      type: string
    TaskStatus:
      enum:
      - Created
      - WaitingForActivation
      - WaitingToRun
      - Running
      - WaitingForChildrenToComplete
      - RanToCompletion
      - Canceled
      - Faulted
      type: string
    ViewParameter:
      additionalProperties: false
      description: Parameters of view
      example:
        dataType: null
        name: name
        description: description
        isTableDataMandatory: true
        value: value
      properties:
        name:
          description: Name of the provider
          maxLength: 256
          minLength: 0
          type: string
        dataType:
          $ref: '#/components/schemas/DataType'
        value:
          description: Value of the provider
          maxLength: 256
          minLength: 0
          type: string
        isTableDataMandatory:
          description: "Should this be selected? False would imply it is only being\
            \ filtered on.\r\nIgnored when Aggregations are present"
          type: boolean
        description:
          description: Description of the parameter
          maxLength: 256
          minLength: 0
          nullable: true
          type: string
      required:
      - dataType
      - name
      - value
      type: object
  securitySchemes:
    oauth2:
      description: OAuth2 Implicit Grant
      flows:
        implicit:
          authorizationUrl: https://lusid-fbn-ci.okta.com/oauth2/aus49h9b8rQPvouCH2p7/v1/authorize
          scopes: {}
      type: oauth2
x-tagGroups:
  name: API
  tags:
  - Application Metadata
  - Certificate Management
  - Current Table/Field Catalog
  - Historically Executed Queries
  - Multi-Query Execution
  - Sql Background Execution
  - Sql Execution
x-group-parameters: true

